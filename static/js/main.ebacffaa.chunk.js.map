{"version":3,"sources":["api.js","Components/mainComps/CryptoInfo.js","reducers/pagenum.js","reducers/coininforeducer.js","reducers/index.js","store.js","Components/mainComps/PriceContainer.js","Components/mainComps/CatDetails.js","Components/mainComps/CryptoCategories.js","Components/SearchComp/SearchComponent.js","Components/SideBar/cryptoNews.js","Components/SideBar/FearAndGreedIndex.js","Components/SideBar/TrendingCoin.js","Components/SideBar.js","App.js","Components/NavBar.js","Components/Footer.js","index.js"],"names":["PriceUpdate","currency","pagenumb","a","pArr","fetch","then","response","json","data","InfoUpdate","id","res","console","log","FngUpdate","searchArr","Array","SearchUpdates","i","push","setInterval","SearchUpdate","TrendUpdate","coins","CatUpdate","CatDetail","catId","UpdateNews","CryptoInfo","onShowInfo","chartContainerRef","useRef","React","useState","coinInfo","setcoinInfo","loadingStatus","setLoading","chartData","setchartData","chartTime","setchartTime","pricefetch","useEffect","resdata","candleArr","length","ohlcobject","current","innerHTML","chart","createChart","width","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","autoScale","timeScale","timeVisible","autoscale","fitContent","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","className","onClick","name","market_cap_rank","market_data","total_volume","aud","market_cap","current_price","ref","defaultState","rank","toggleTime","coinId","showCoinInfo","combineReducers","pagenum","state","action","type","coininforeducer","showInfo","store","createStore","reducer","PriceContainer","setCoins","setshowInfo","setcoinId","choices","setChoices","subscribe","getState","Pupdate","newArr","map","src","image","symbol","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_14d_in_currency","price_change_percentage_30d_in_currency","CatDetails","props","catCoins","setCatCoins","loading","CateUpdate","catcoins","CatCard","market_cap_change_24h","CryptoCategories","mainRef","catData","setcatData","catID","setcatID","catDetails","setCatDetails","CatFetch","getMarketCap","count","totalMarketCap","cData","hoverable","volume_24h","SearchComponent","inputChange","setInputChange","searchCoin","setsearchCoins","SearcHead","flat","undefined","setTimeout","checkValue","val","parseInt","makeToFixed","toFixed","placeholder","onChange","event","value","target","sort","b","index","price_change_percentage_7d_in_currency","filter","toLowerCase","startsWith","CryptoNews","news","setNews","NewsUpdate","results","x","href","url","title","created_at","FearAndGreedIndex","fng","setfng","UpdateFNG","class","String","findColor","value_classification","sec","updateValue","time_until_update","TrendingCoin","trending","setTrending","TrendUpdt","trendCoin","item","small","SideBar","App","dispatch","path","component","exact","NavBar","pagenumArr","CurrencyArr","pageMenuText","setPageMenuText","curMenuText","setCurMenuText","to","handlePageNum","handleCurrencyChange","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEMA,EAAW,uCAAG,WAAOC,EAASC,GAAhB,eAAAC,EAAA,6DACVC,EAAQC,MAAM,8DAA8DJ,EAAS,4CAA4CC,EAAS,iEAC/II,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,OAAOA,KAHN,kBAITL,GAJS,2CAAH,wDAQXM,EAAU,uCAAG,WAAOC,GAAP,SAAAR,EAAA,+EACZE,MAAM,0CAA0CM,EAAG,oDACzDL,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAA2B,OAAlBI,QAAQC,IAAIL,GAAaA,MAHrB,2CAAH,sDAOVM,EAAS,uCAAG,sBAAAZ,EAAA,+EACRE,MAAM,mCACZC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAAS,OAAOA,MAHP,2CAAH,qDAMXO,EAAY,IAAIC,MACdC,EAAa,uCAAG,4BAAAf,EAAA,sDACnB,IAAQgB,EAAI,EAAGA,EAAG,GAAIA,IACnBd,MAAM,0GAA0Gc,EAAE,gEAChHb,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAASO,EAAUI,KAAKX,MAJf,yBAMZO,GANY,2CAAH,qDAQnBE,IACAG,aAAY,WAAOL,EAAY,GAAGE,MAAkB,KAEpD,IAAMI,EAAY,uCAAG,sBAAAnB,EAAA,+EACXa,GADW,2CAAH,qDAIZO,EAAW,uCAAG,sBAAApB,EAAA,+EACVE,MAAM,oDACZC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAA2B,OAAlBI,QAAQC,IAAIL,GAAaA,EAAKe,UAH5B,2CAAH,qDAMXC,EAAS,uCAAG,sBAAAtB,EAAA,+EACRE,MAAM,qDACPC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAAS,OAAOA,MAHZ,2CAAH,qDAQTiB,EAAS,uCAAG,WAAOC,GAAP,SAAAxB,EAAA,+EACRE,MAAM,2EAA2EsB,EAAM,2GAC7FrB,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAAQ,OAAOA,MAHN,2CAAH,sDAQTmB,EAAU,uCAAG,sBAAAzB,EAAA,+EACTE,MAAM,yGACZC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAA2B,OAAlBI,QAAQC,IAAIL,GAAaA,MAHxB,2CAAH,qD,OCoEDoB,EA5HI,SAAC,GAAoB,IAAnBlB,EAAkB,EAAlBA,GAAGmB,EAAe,EAAfA,WACpBjB,QAAQC,IAAI,uBAEZ,IAAMiB,EAAoBC,mBAE1B,EAA+BC,IAAMC,SAAS,IAA9C,mBAAMC,EAAN,KAAgBC,EAAhB,KACA,EAAmCH,IAAMC,UAAS,GAAlD,mBAAMG,EAAN,KAAqBC,EAArB,KACA,EAAiCL,IAAMC,UAAS,GAAhD,mBAAMK,EAAN,KAAiBC,EAAjB,KACA,EAAiCP,IAAMC,SAAS,GAAhD,mBAAMO,EAAN,KAAiBC,EAAjB,KAGMC,EAAU,uCAAG,sBAAAxC,EAAA,kEACjBiC,EADiB,SACC1B,EAAWC,GADZ,kCAEjB2B,GAAW,GAFM,2CAAH,qDAqEhB,OATAL,IAAMW,WAAU,WACZD,IAEA9B,QAAQC,IAAIiB,GAEZQ,GA3DsBlC,MAAM,0CAA0CM,EAAG,8BAA8B8B,GAC9EnC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAuC,GAEJ,IADA,IAAIC,EAAY,GACR3B,EAAE,EAAGA,EAAI0B,EAAQE,OAAQ5B,IAAI,CACjC,IAAI6B,EAAa,CAAC,KAAO,GAAG,KAAQ,EAAG,KAAQ,EAAG,IAAO,EAAG,MAAS,GACrEA,EAAU,KAAYH,EAAQ1B,GAAG,GAAG,IACpC6B,EAAU,KAAWH,EAAQ1B,GAAG,GAChC6B,EAAU,KAAWH,EAAQ1B,GAAG,GAChC6B,EAAU,IAAUH,EAAQ1B,GAAG,GAC/B6B,EAAU,MAAYH,EAAQ1B,GAAG,GACjC2B,EAAU1B,KAAK4B,GAEnBjB,EAAkBkB,QAAQC,UAAY,GACxC,IAAMC,EAAQC,YAAYrB,EAAkBkB,QAAS,CACjDI,MAAO,IACPC,OAAQ,IAERC,OAAQ,CACJC,gBAAiB,UACjBC,UAAW,4BAEbC,KAAM,CACJC,UAAW,CACTC,MAAO,WAETC,UAAW,CACTD,MAAO,YAGXE,UAAW,CACTC,KAAMC,IAAcC,QAEtBC,WAAY,CACVC,YAAa,UACbC,WAAW,GAEbC,UAAW,CACTF,YAAa,UACbG,aAAY,EACZC,WAAW,KAGlBpB,EAAMkB,YAAYG,aACCrB,EAAMsB,qBAAqB,CAC3CC,QAAS,UACTC,UAAW,UACXC,gBAAiB,uBACjBC,cAAe,uBACfC,cAAe,uBACfC,YAAa,yBAGFC,QAAQlC,QAOjD,CAACnC,EAAI4B,EAAWE,IAIhB,cAAC,IAAD,UACE,sBAAKwC,UAAY,YAAjB,UAEI,sBAAKA,UAAY,cAAjB,UACI,wBAAQC,QAAW,kBAAMpD,GAAW,IAApC,eACA,6BAAKK,EAASgD,OACd,wBAAQD,QAAW,kBAAM1C,GAAcD,IAAvC,uBAGHF,GAED,qBAAK4C,UAAY,YAAjB,SACI,gCACA,wCAAW9C,EAASgD,QACpB,yCAAYhD,EAASiD,mBACrB,4CAAejD,EAASkD,YAAYC,aAAaC,OACjD,gDAAmBpD,EAASkD,YAAYG,WAAWD,OACnD,2CAAcpD,EAASkD,YAAYI,cAAcF,YAKrD,sBAAKN,UAAY,aAAjB,UACG1C,GAAa,qBAAKmD,IAAK3D,IAEvBQ,GAAa,sBAAK0C,UAAY,cAAjB,UACZ,wBAAQA,UAAY,gBAAgBC,QAAW,WAAOxC,EAAa,IAAnE,eACA,wBAAQuC,UAAY,gBAAgBC,QAAW,WAAOxC,EAAa,IAAnE,eACA,wBAAQuC,UAAY,gBAAgBC,QAAW,WAAOxC,EAAa,KAAnE,gBACA,wBAAQuC,UAAY,gBAAgBC,QAAW,WAAOxC,EAAa,KAAnE,gBACA,wBAAQuC,UAAY,gBAAgBC,QAAW,WAAOxC,EAAa,MAAnE,iBACA,wBAAQuC,UAAY,gBAAgBC,QAAW,WAAOxC,EAAa,MAAnE,uBAGS,qBAAKuC,UAAY,0B,gBCvHpCU,EAAe,CACGC,KAAK,EACL3F,SAAU,MACV4F,WAAY,GCHpC,IAAMF,EAAe,CACjBG,OAAQ,KACRC,cAAc,GCEHC,kBAAgB,CAC3BC,QFCW,WAA+C,IAA9BC,EAA6B,uDAArBP,EAAcQ,EAAO,uCACzD,OAAOA,EAAOC,MACV,IAAK,aACD,kCACOF,GADP,IAEQN,KAAMO,EAAOP,OAEzB,IAAK,iBACD,kCACOM,GADP,IAEQjG,SAAUkG,EAAOlG,WAE7B,IAAK,aACD,kCACOiG,GADP,IAEQL,WAAYM,EAAON,aAE/B,QACI,OAAOK,IElBfG,gBDDW,WAAoD,IAA3BH,EAA0B,uDAApBP,EAAaQ,EAAO,uCAC9D,OAAOA,EAAOC,MACV,IAAK,YACD,kCACOF,GADP,IAEQJ,OAASK,EAAOL,OAChBC,aAAcI,EAAOG,WAEjC,IAAK,cACD,kCACOJ,GADP,IAEQJ,OAAQ,KACRC,cAAc,IAE1B,QACI,OAAOG,MEhBJK,EAFDC,YAAYC,GC4DXC,EAzDQ,WAGtB,MAAyBzE,IAAMC,SAAS,IAAxC,mBAAMV,EAAN,KAAamF,EAAb,KACA,EAA+B1E,IAAMC,UAAS,GAA9C,mBAAMoE,EAAN,KAAgBM,EAAhB,KACA,EAA2B3E,IAAMC,WAAjC,mBAAM4D,EAAN,KAAce,EAAd,KACA,EAA6B3E,mBACR,CACE,QAAU,EACV,SAAW,MACX,WAAa,IAJpC,mBAAM4E,EAAN,KAAeC,EAAf,KAODR,EAAMS,WAAU,WAAQ,IAAIf,EAAUM,EAAMU,WAAWhB,QAAQL,KACnC3F,EAAWsG,EAAMU,WAAWhB,QAAQhG,SACpC4F,EAAaU,EAAMU,WAAWhB,QAAQJ,WAC5CkB,EAAW,CAAC,QAAUd,EAAQ,SAAWhG,EAAU,WAAa4F,IAChEhF,QAAQC,IAAIgG,MAGjC,IAAMI,EAAO,uCAAG,sBAAA/G,EAAA,kEACfwG,EADe,SACA3G,EAAY8G,EAAQ7G,SAAS6G,EAAQb,SADrC,6EAAH,qDAGb5E,aAAY,kBAAM6F,MAAU,KAC5BjF,IAAMW,WAAU,WACdsE,MACG,CAACJ,EAAQ7G,SAAS6G,EAAQb,UAE/B,IAAIkB,EAAS,IAAIlG,MACjB,OAEI,qCAECO,EAAM4F,KAAI,SAAA5F,GAAK,OACd,sBAAsB0D,QAAW,WAAO2B,EAAUrF,EAAMb,IAAIiG,GAAY,IAAxE,UACC,sBAAK3B,UAAakC,EAAOL,EAAQjB,aAAe,EAAI,aAAe,wBAAnE,UAEA,qBAAKwB,IAAO7F,EAAM8F,QAClB,8BAAI9F,EAAM+F,OAAO,uBAChB/F,EAAMiE,oBAIR,mBAAGR,UAAY,SAAf,SAAyBkC,EAAS,CAAC3F,EAAMgG,uCACvChG,EAAMiG,wCAAwCjG,EAAMkG,wCAAwClG,EAAMmG,6CAVxFnG,EAAMb,OAgBnB2F,GAAY,cAAC,EAAD,CAAY3F,GAAImF,EAAQhE,WAAc8E,IAClD/F,QAAQC,IAAI,uBCdH8G,EAtCI,SAAAC,GACf,MAA8B5F,IAAMC,WAApC,mBAAM4F,EAAN,KAAeC,EAAf,KACA,EAA8B9F,IAAMC,UAAS,GAA7C,mBAAO8F,EAAP,KAAgB1F,EAAhB,KACA,EAA+BL,IAAMC,UAAS,GAA9C,mBAAMoE,EAAN,KAAgBM,EAAhB,KACA,EAA2B3E,IAAMC,WAAjC,mBAAM4D,EAAN,KAAce,EAAd,KAEMoB,EAAU,uCAAG,sBAAA9H,EAAA,kEACjB4H,EADiB,SACCrG,EAAUmG,EAAMlG,OADjB,kCAEjBW,GAAW,GAFM,2CAAH,qDAShB,OALAM,qBAAU,WAENqF,MACF,IAGF,qCAEQD,GACAF,EAASV,KAAI,SAAAc,GAAQ,OACnB,qBAAKhD,QAAW,WAAO2B,EAAUqB,EAASvH,IAAIiG,GAAY,IAA1D,SACC,sBAAyB3B,UAAaiD,EAASV,wCAA0C,EAAI,aAAe,wBAA5G,UAEA,qBAAKH,IAAOa,EAASZ,QACrB,8BAAIY,EAASX,OAAO,uBACnBW,EAASzC,mBAJEyC,EAASvH,SAWvB2F,GAAY,cAAC,EAAD,CAAY3F,GAAImF,EAAQhE,WAAc8E,IAClD/F,QAAQC,IAAI,uBCqBnBqH,EAAU,SAAAN,GACZ,OACE,qBAAsB5C,UAAa4C,EAAMO,uBAAyB,EAAI,WAAa,0BAAnF,SAGE,8BAAIP,EAAM1C,KAAK,2BAHL0C,EAAMlH,KAST0H,EAhEU,WAErB,IAAMC,EAAUtG,mBAEhB,EAA6BC,IAAMC,SAAS,IAA5C,mBAAOqG,EAAP,KAAeC,EAAf,KAEA,EAAyBvG,IAAMC,SAAS,IAAxC,mBAAOuG,EAAP,KAAaC,EAAb,KACA,EAAmCzG,IAAMC,UAAS,GAAlD,mBAAOyG,EAAP,KAAkBC,EAAlB,KACA,EAA8B1G,oBAAS,GAAvC,mBAAO8F,EAAP,KAAgB1F,EAAhB,KAEMuG,EAAQ,uCAAG,sBAAA1I,EAAA,kEACbqI,EADa,SACI/G,IADJ,kCAEba,GAAW,GAFE,2CAAH,qDAKRwG,EAAe,WACnB,IAAIC,EAAQ,EACRC,EAAiBT,EAAQnB,KAAI,SAAA6B,GAAK,OAAIF,GAASE,EAAMzD,cACzD,OAAOwD,EAAeA,EAAejG,OAAS,IAShD,OANAd,IAAMW,WAAU,WACAiG,IACAb,GAAWc,IACXF,GAAc,KAC5B,IAIE,sBAAK3D,UAAY,WAAWS,IAAM4C,EAAlC,UACE,sBAAKrD,UAAY,aAAjB,UACE,sDACC0D,GAAc,wBAAQ1D,UAAY,kBAAkBC,QAAW,kBAAI0D,GAAc,IAAnE,2BAEF,GAAdD,EACDX,GAAWO,EAAQnB,KAAI,SAAAmB,GAAO,OAC5B,qBAAKtD,UAAY,mBAAkBC,QAAW,WAAOwD,EAASH,EAAQ5H,IAAIE,QAAQC,IAAI2H,GAAOG,GAAc,IAA3G,SACA,cAAC,EAAD,CAASM,WAAS,EAClB/D,KAAMoD,EAAQpD,KACdK,WAAY+C,EAAQ/C,WACpB7E,GAAM4H,EAAQ5H,GACdwI,WAAcZ,EAAQY,WACtBf,sBAAyBG,EAAQH,sBACjCY,eAAkBF,WAKzB,cAAC,EAAD,CAAYnH,MAAS8G,QCyCXW,EA5FS,WACpB,MAAsClH,mBAAS,IAA/C,mBAAOmH,EAAP,KAAoBC,EAApB,KACA,EAAqCpH,qBAArC,mBAAOqH,EAAP,KAAmBC,EAAnB,KACA,EAA8BtH,oBAAS,GAAvC,mBAAO8F,EAAP,KAAgB1F,EAAhB,KACMmH,EAAYzH,mBAEZhC,EAAW,uCAAG,4BAAAG,EAAA,sEAC6BmB,IAD7B,OACgBb,EADhB,OAEY+I,EAAe/I,EAAKiJ,QACpB7I,QAAQC,IAAIyI,GACZjH,GAAW,GAJvB,2CAAH,0DAMCqH,GAAdJ,GACJK,YAAW,kBAAK5J,MAAc,KAC9B4C,qBAAU,WAEMN,GAAW,GACXtC,IACAgI,GAAWnH,QAAQC,IAAI,iBAAiByI,EAAWvB,KACrD,CAACqB,IAEf,IAOMQ,EAAa,SAAAC,GAAG,OAAIC,SAASD,GAAO,EAAI,cAAe,cACvDE,EAAc,SAAAF,GAAQ,GAAW,MAAPA,EACJ,OAAOA,EAAIG,QAAQ,IAE/C,OACI,sBAAKhF,UAAY,SAAjB,UACI,iDACA,sBAAKA,UAAY,YAAjB,UACI,qBAAKA,UAAY,mBAAmBS,IAAO+D,IAC3C,uBAAOrD,KAAO,OAAO8D,YAAc,wBAAwBC,SAhBlD,SAACC,GAClBvJ,QAAQC,IAAIuI,GACZI,EAAUxG,QAAQoH,MAAQ,yBAC1BxJ,QAAQC,IAAI2I,GACZH,EAAec,EAAME,OAAOD,aAcxB,qBAAKpF,UAAY,eAAjB,SACG,wBAAOA,UAAY,mBAAnB,UACK,gCACI,+BACI,uCACA,sCACA,4CACA,+CACA,qCACA,sCACA,wCACA,8CAGR,gCACgB,IAAfoE,EACDrB,GAAWuB,EAAWgB,MAAK,SAAUpK,EAAGqK,GACpC,OAAOT,SAASS,EAAE/C,yCAA2CsC,SAAS5J,EAAEsH,4CACvEL,KAAI,SAAC5F,EAAMiJ,GAAP,OACLA,EAAO,IACH,+BACI,6BAAKjJ,EAAM4D,kBACX,6BAAK5D,EAAM2D,OACX,6BAAK3D,EAAMgE,aACX,6BAAKhE,EAAMiE,gBACX,oBAAIR,UAAa4E,EAAWrI,EAAMgG,wCAAlC,SACSwC,EAAYxI,EAAMgG,0CAC3B,oBAAIvC,UAAa4E,EAAWrI,EAAMiG,yCAAlC,SAA6EuC,EAAYxI,EAAMiG,2CAC/F,oBAAIxC,UAAa4E,EAAWrI,EAAMkJ,wCAAlC,SAA4EV,EAAYxI,EAAMkJ,0CAC9F,oBAAIzF,UAAa4E,EAAWrI,EAAMmG,yCAAlC,SAA6EqC,EAAYxI,EAAMmG,iDAEnHK,GAAWuB,EAAWgB,MAAK,SAAUpK,EAAGqK,GACxC,OAAOT,SAAS5J,EAAEiF,iBAAmB2E,SAASS,EAAEpF,oBAC/CuF,QAAO,SAAAnJ,GAAK,OAAIA,EAAM2D,KAAKyF,cAAcC,WAAWxB,MAAcjC,KAAI,SAAA5F,GAAK,OAC5D,+BACI,6BAAKA,EAAM4D,kBACX,6BAAK5D,EAAM2D,OACX,6BAAK3D,EAAMgE,aACX,6BAAKhE,EAAMiE,gBACX,oBAAIR,UAAa4E,EAAWrI,EAAMgG,wCAAlC,SACSwC,EAAYxI,EAAMgG,0CAC3B,oBAAIvC,UAAa4E,EAAWrI,EAAMiG,yCAAlC,SAA6EuC,EAAYxI,EAAMiG,2CAC/F,oBAAIxC,UAAa4E,EAAWrI,EAAMkJ,wCAAlC,SAA4EV,EAAYxI,EAAMkJ,0CAC9F,oBAAIzF,UAAa4E,EAAWrI,EAAMmG,yCAAlC,SAA6EqC,EAAYxI,EAAMmG,4DCxDhHmD,EA1BI,WACf,MAAuB5I,qBAAvB,mBAAO6I,EAAP,KAAYC,EAAZ,KACA,EAA8B9I,oBAAS,GAAvC,mBAAO8F,EAAP,KAAgB1F,EAAhB,KAEM2I,EAAU,uCAAG,sBAAA9K,EAAA,kEACf6K,EADe,SACDpJ,IADC,kCAEfU,GAAW,GAFI,2CAAH,qDAKhB,OADAM,oBAAUqI,EAAW,IAEjB,sBAAKhG,UAAY,eAAjB,UACI,2CACA,uBACK+C,GAAW+C,EAAKG,QAAQ9D,KAAI,SAAC+D,EAAGV,GAAJ,OACzBA,EAAQ,IACJ,qBAAKxF,UAAY,YAAjB,SACA,oBAAGmG,KAAQ,GAAGD,EAAEE,IAAKf,OAAO,SAA5B,UACA,8BAAMa,EAAEG,QACR,4BAAIH,EAAEI,yBC0CfC,EA7DW,WAGtB,MAAqBtJ,mBAAS,IAA9B,mBAAMuJ,EAAN,KAAWC,EAAX,KACA,EAA8BxJ,oBAAS,GAAvC,mBAAO8F,EAAP,KAAgB1F,EAAhB,KACMqJ,EAAS,uCAAG,sBAAAxL,EAAA,kEACduL,EADc,SACD3K,IADC,kCAEduB,GAAW,GAFG,2CAAH,qDAIfM,qBAAU,kBAAM+I,MAAY,IA8B5B,OACI,sBAAK1G,UAAY,YAAjB,UACI,sBAAKA,UAAY,aAAjB,UACI,qBAAKoC,IAAM,qBACX,8BAAK,4DAGT,qBAAKuE,MAAQ,QAAb,+BACA,uBACC/K,QAAQC,IAAI2K,GACZzD,GAAU,qBAAK/C,UAAY,WAAjB,SACP,wCAAU,uBAAMA,UAAa4G,OAxCvB,SAAC/B,GACf,IAAIO,EAAQN,SAASD,GAErB,QAAO,GAEP,KAAMO,GAAS,GAEX,MAAO,UACX,KAAMA,EAAQ,IAAMA,GAAS,GAEzB,MAAO,aAEX,KAAMA,EAAQ,GAEV,MAAO,WACX,QACI,MAAO,IAwBiCyB,CAAUL,EAAIhL,KAAK,GAAG4J,QAAhD,UAA0DoB,EAAIhL,KAAK,GAAG4J,MAAM,uBACrFoB,EAAIhL,KAAK,GAAGsL,6BAEjB,qBAAK9G,UAAY,aAAjB,SACC+C,GAAW,uDAxBA,SAACgE,GAEb,IAAIlC,EAAMC,SAASiC,GAInB,OAHYjC,SAASD,EAAK,MAGV,SAkBsBmC,CAAYR,EAAIhL,KAAK,GAAGyL,4BCzB3DC,EA5BM,WACjB,MAA+BjK,mBAAS,IAAxC,mBAAOkK,EAAP,KAAgBC,EAAhB,KACA,EAA+BpK,IAAMC,UAAS,GAA9C,mBAAMoE,EAAN,KAAgBM,EAAhB,KACA,EAA2B3E,IAAMC,WAAjC,mBAAM4D,EAAN,KAAce,EAAd,KACMyF,EAAS,uCAAG,sBAAAnM,EAAA,kEACdkM,EADc,SACI9K,IADJ,6EAAH,qDAKf,OAFAqB,oBAAU0J,EAAU,IAGhB,sBAAKrH,UAAY,WAAjB,UACI,4CACA,6BACCmH,EAAShF,KAAI,SAAAmF,GAAS,OACnB,qBAAItH,UAAY,gBAAgBC,QAAW,WAAO2B,EAAU0F,EAAUC,KAAK7L,IAAIiG,GAAY,IAA3F,UACI,qBAAKS,IAAOkF,EAAUC,KAAKC,QAC3B,gCACKF,EAAUC,KAAK7L,GAAG,uBADvB,oBAEsB4L,EAAUC,KAAKpH,2BAK5CkB,GAAY,cAAC,EAAD,CAAY3F,GAAImF,EAAQhE,WAAc8E,QCXhD8F,EAVC,WACZ,OACG,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,QCuCOC,EAnCH,WAGV,OAFA9L,QAAQC,IAAI,qBAGV,sBAAKmE,UAAW,YAAhB,UACA,sBAAKA,UAAY,SAAjB,UACG,wBAAQA,UAAY,eAAeC,QAAW,kBAAMqB,EAAMqG,SAAS,CAACxG,KAAK,aAAaP,WAAW,KAAjG,iBACA,wBAAQZ,UAAY,eAAeC,QAAW,kBAAMqB,EAAMqG,SAAS,CAACxG,KAAK,aAAaP,WAAW,KAAjG,kBACA,wBAAQZ,UAAY,eAAeC,QAAW,kBAAMqB,EAAMqG,SAAS,CAACxG,KAAK,aAAaP,WAAW,KAAjG,iBACA,wBAAQZ,UAAY,eAAeC,QAAW,kBAAMqB,EAAMqG,SAAS,CAACxG,KAAK,aAAaP,WAAW,KAAjG,oBAEF,cAAC,IAAD,UACA,qBAAKZ,UAAY,OAAjB,SACC,cAAC,IAAD,CAAO4H,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,KAAoBC,OAAK,QAI1D,sBAAK9H,UAAY,UAAjB,UACE,sBAAKA,UAAY,UAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,sBAAKA,UAAY,iBAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,c,QCgCK+H,EAhEA,WACX,IAAMC,EAAa,CAAC,UAAW,UAAW,UAAW,UAAW,WAC1DC,EAAc,CAAC,MAAO,MAAM,MAAM,MAAO,MAAO,OACtD,EAAwChL,mBAAS,WAAjD,mBAAOiL,EAAP,KAAqBC,EAArB,KACA,EAAsClL,mBAAS,OAA/C,mBAAOmL,EAAP,KAAoBC,EAApB,KAaA,OACI,gCACF,qBAAK1B,MAAM,OAAX,SACE,eAAC,IAAD,CAAM2B,GAAK,IAAX,UACA,qBAAKlG,IAAI,eACT,sBAAKuE,MAAM,SAAX,UACE,6CAAoB,uBACtB,0EAKF,qBAAKA,MAAM,OAAX,SACE,+BACE,qBAAIA,MAAM,WAAV,UACI,wBAAQA,MAAM,oCAAoCxF,KAAK,SAASzF,GAAG,sBAAsB,iBAAe,WAAW,gBAAc,QAAjI,SACGwM,IAEH,oBAAIvB,MAAM,mCAAmC,kBAAgB,sBAA7D,SACGqB,EAAW7F,KAAI,SAACiD,EAAMI,GAAP,OACf,oBAAIvF,QAAW,kBA/BN,SAACuF,GACrBlE,EAAMqG,SAAS,CAACxG,KAAM,aAAcR,KAAO6E,EAAM,IACjD2C,EAAgBH,EAAWxC,IAC3B5J,QAAQC,IAAIqM,GA4BoBK,CAAc/C,IAAnC,SACC,mBAAGmB,MAAM,gBAAgBR,KAAK,IAA9B,SAAmCf,cAM3C,qBAAIuB,MAAM,WAAV,UACI,wBAAQA,MAAM,oCAAoCxF,KAAK,SAASzF,GAAG,sBAAsB,iBAAe,WAAW,gBAAc,QAAjI,SACG0M,IAEH,oBAAIzB,MAAM,mCAAmC,kBAAgB,sBAA7D,SACCsB,EAAY9F,KAAI,SAACiD,EAAMI,GAAP,OACd,oBAAIvF,QAAW,kBAvCC,SAACuF,GAC5BlE,EAAMqG,SAAS,CAACxG,KAAM,iBAAkBnG,SAAUiN,EAAYzC,GAAOG,gBACrE0C,EAAeJ,EAAYzC,IAC3B5J,QAAQC,IAAIoM,GAoCoBO,CAAqBhD,IAA1C,SACC,mBAAGmB,MAAM,gBAAgBR,KAAK,IAA9B,SAAmCf,cAM3C,6BAAI,uDC5BCqD,EA/BA,WAEX,OAEI,sBAAKzI,UAAY,SAAjB,UACI,uBACA,sBAAKA,UAAY,MAAjB,UACI,qBAAKA,UAAY,qBAAjB,SACI,qBAAK2G,MAAM,OAAX,SACI,eAAC,IAAD,CAAM2B,GAAK,IAAX,UACA,qBAAKlG,IAAI,eACL,sBAAKuE,MAAM,SAAX,UACI,6CAAoB,uBACpB,4EAMhB,qBAAK3G,UAAY,qBAAjB,SACI,sBAAKA,UAAY,eAAjB,UACI,mBAAGmG,KAAO,+BAA+Bd,OAAS,SAAlD,SAA2D,mBAAGsB,MAAM,oBACpE,mBAAGR,KAAO,+BAA+Bd,OAAS,SAAlD,SAA2D,mBAAGsB,MAAM,mBACpE,mBAAGR,KAAO,8CAA8Cd,OAAS,SAAjE,SAA0E,mBAAGsB,MAAM,iCCbzG+B,IAASC,OACC,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SAGhBC,SAASC,eAAe,W","file":"static/js/main.ebacffaa.chunk.js","sourcesContent":["\r\n//  For PriceCointainer\r\nconst PriceUpdate = async (currency,pagenumb) => {\r\n    const pArr =  fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency='+currency+'&order=market_cap_desc&per_page=108&page='+pagenumb+'&sparkline=false&price_change_percentage=1h%2C24h%2C14d%2C30d')\r\n    .then(response => response.json())\r\n    .then(data => {return data})\r\n    return pArr;\r\n}\r\n// For crypto Info Component\r\n\r\nconst InfoUpdate = async (id) =>{\r\nreturn fetch('https://api.coingecko.com/api/v3/coins/'+id+'?localization=en&market_data=true&sparkline=true')\r\n.then(res => res.json())\r\n.then(data => {console.log(data);return data})\r\n}\r\n\r\n// FNG index\r\nconst FngUpdate = async () => {\r\n   return fetch('https://api.alternative.me/fng/')\r\n   .then(res => res.json())\r\n   .then(data => {return data})\r\n}\r\n// searchUpdate\r\nlet searchArr = new Array();\r\nconst SearchUpdates = async() => {\r\n   for(let i = 1; i< 15; i++){\r\n      fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=AUD&order=market_cap_desc&per_page=250&page='+i+'&sparkline=false&price_change_percentage=1h%2C24h%2C7d%2C30d')\r\n       .then(res => res.json())\r\n       .then(data => {searchArr.push(data);})      \r\n   }\r\n   return searchArr;\r\n}\r\nSearchUpdates();\r\nsetInterval(() => {searchArr = [];SearchUpdates();},5000);\r\n\r\nconst SearchUpdate = async () => {\r\n   return searchArr;\r\n}\r\n// Trending\r\nconst TrendUpdate = async () =>{\r\n   return fetch('https://api.coingecko.com/api/v3/search/trending')\r\n   .then(res => res.json())\r\n   .then(data => {console.log(data);return data.coins})\r\n}\r\n// Categories\r\nconst CatUpdate = async () => {\r\n   return fetch('https://api.coingecko.com/api/v3/coins/categories')\r\n        .then(res => res.json())\r\n        .then(data => {return data})\r\n}\r\n\r\n// INDIVIDUAL Category\r\n\r\nconst CatDetail = async (catId) =>{\r\n   return fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&category='+catId+'&order=market_cap_desc&per_page=250&page=1&sparkline=false&price_change_percentage=1h%2C24h%2C14d%2C30d')\r\n   .then(res => res.json())\r\n   .then(data =>{return data;})\r\n}\r\n\r\n// NewsUpdate\r\nconst APIKEY = '72d821f774bd40cc99dd31ab854dac8dcee15542'\r\nconst UpdateNews = async () =>{\r\n   return fetch('https://cryptopanic.com/api/v1/posts/?auth_token='+APIKEY+'&public=true')\r\n   .then(res => res.json())\r\n   .then(data => {console.log(data);return data;})\r\n}\r\n\r\nexport {PriceUpdate, InfoUpdate, FngUpdate, SearchUpdate, SearchUpdates, TrendUpdate, CatUpdate, CatDetail, UpdateNews}\r\n","import React, { createRef, useRef } from 'react';\r\nimport { createChart, CrosshairMode } from 'lightweight-charts';\r\nimport Draggable, {DraggableCore} from 'react-draggable';\r\nimport { InfoUpdate } from '../../api'; \r\n\r\nconst CryptoInfo = ({id,onShowInfo}) =>{\r\n    console.log(\"cryptoinfo rendered\");\r\n    // refs and states\r\n    const chartContainerRef = useRef();\r\n    \r\n    const[coinInfo, setcoinInfo] = React.useState({});    \r\n    const[loadingStatus, setLoading] = React.useState(false);\r\n    const[chartData, setchartData] = React.useState(false);\r\n    const[chartTime, setchartTime] = React.useState(1);\r\n    \r\n    \r\n    const pricefetch = async () => {\r\n      setcoinInfo(await InfoUpdate(id));\r\n      setLoading(true);\r\n    }\r\n    \r\n\r\n    const ChartFetch = () => {fetch('https://api.coingecko.com/api/v3/coins/'+id+'/ohlc?vs_currency=aud&days='+chartTime)\r\n                                .then(res => res.json())\r\n                                .then(resdata =>{\r\n                                  let candleArr = [];\r\n                                  for(let i=0; i < resdata.length; i++){\r\n                                      let ohlcobject = {'time':'','open': 0, 'high': 0, 'low': 0, 'close': 0};\r\n                                      ohlcobject['time'] = (resdata[i][0]/1000);\r\n                                      ohlcobject['open'] = resdata[i][1];\r\n                                      ohlcobject['high'] = resdata[i][2];\r\n                                      ohlcobject['low'] = resdata[i][3];\r\n                                      ohlcobject['close'] = resdata[i][4];\r\n                                      candleArr.push(ohlcobject);    \r\n                                  }\r\n                                  chartContainerRef.current.innerHTML = '';\r\n                                const chart = createChart(chartContainerRef.current, { \r\n                                    width: 600,\r\n                                    height: 400,\r\n                                    \r\n                                    layout: {\r\n                                        backgroundColor: '#253248',\r\n                                        textColor: 'rgba(255, 255, 255, 0.9)',\r\n                                      },\r\n                                      grid: {\r\n                                        vertLines: {\r\n                                          color: '#334158',\r\n                                        },\r\n                                        horzLines: {\r\n                                          color: '#334158',\r\n                                        },\r\n                                      },\r\n                                      crosshair: {\r\n                                        mode: CrosshairMode.Normal,\r\n                                      },\r\n                                      priceScale: {\r\n                                        borderColor: '#485c7b',\r\n                                        autoScale: true,\r\n                                      },\r\n                                      timeScale: {\r\n                                        borderColor: '#485c7b',\r\n                                        timeVisible:true,\r\n                                        autoscale: true,\r\n                                      },\r\n                                 });\r\n                                 chart.timeScale().fitContent();\r\n                                 var candleSeries = chart.addCandlestickSeries({\r\n                                    upColor: '#00ff00',\r\n                                    downColor: '#ff0000',\r\n                                    borderDownColor: 'rgba(255, 144, 0, 1)',\r\n                                    borderUpColor: 'rgba(255, 144, 0, 1)',\r\n                                    wickDownColor: 'rgba(255, 144, 0, 1)',\r\n                                    wickUpColor: 'rgba(255, 144, 0, 1)',\r\n                                  });\r\n\r\n                                  candleSeries.setData(candleArr);})}\r\n    React.useEffect(() => {\r\n        pricefetch();\r\n\r\n        console.log(chartContainerRef);\r\n\r\n        chartData && ChartFetch();\r\n    },[id, chartData, chartTime]);\r\n\r\n    \r\n    return(\r\n      <Draggable>\r\n        <div className = \"info-card\">\r\n            \r\n            <div className = \"info-header\">\r\n                <button onClick = {() => onShowInfo(false)}>X</button>\r\n                <h1>{coinInfo.name}</h1>\r\n                <button onClick = {() => setchartData(!chartData)}>Charts</button>\r\n            </div>\r\n            \r\n            {loadingStatus &&\r\n            \r\n            <div className = \"info-main\">\r\n                <pre>\r\n                <p>Name : {coinInfo.name}</p>\r\n                <p>Rank : #{coinInfo.market_cap_rank}</p>\r\n                <p>Volume : AU{coinInfo.market_data.total_volume.aud}</p>\r\n                <p>market_cap : AU{coinInfo.market_data.market_cap.aud}</p>\r\n                <p>Price : AU{coinInfo.market_data.current_price.aud}</p>\r\n                </pre>\r\n            </div>\r\n          } \r\n          \r\n            <div className = \"info-chart\">\r\n              {chartData && <div ref={chartContainerRef} ></div>}\r\n               \r\n              {chartData && <div className = \"charts-time\">\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(1);}}>1</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(7);}}>7</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(14);}}>14</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(30);}}>30</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(180);}}>180</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(365);}}>365</button>\r\n              </div>}\r\n            </div>\r\n                         <div className = \"info-indicators\"></div>\r\n        \r\n         </div>\r\n         </Draggable>                 \r\n        );\r\n\r\n}\r\n\r\n\r\nexport default CryptoInfo;","\r\nconst defaultState = {\r\n                        rank:1, \r\n                        currency: 'usd',\r\n                        toggleTime: 0\r\n}\r\n\r\nexport default function pagenum(state = defaultState, action){\r\n    switch(action.type){\r\n        case 'changeRank':\r\n            return{ \r\n                ...state,\r\n                    rank: action.rank\r\n                }\r\n        case 'changeCurrency':\r\n            return{\r\n                ...state,\r\n                    currency: action.currency\r\n            }\r\n        case 'changeTime':\r\n            return{\r\n                ...state,\r\n                    toggleTime: action.toggleTime\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst defaultState = {\r\n    coinId: null,\r\n    showCoinInfo: false,\r\n}\r\n\r\nexport default function coininforeducer(state=defaultState,action){\r\n    switch(action.type){\r\n        case 'setCoinId':\r\n            return{\r\n                ...state,\r\n                    coinId : action.coinId,\r\n                    showCoinInfo: action.showInfo,\r\n            }\r\n        case 'unsetCoinId':\r\n            return{\r\n                ...state,\r\n                    coinId: null,\r\n                    showCoinInfo: false,\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n    \r\n}","import { combineReducers } from 'redux'\r\nimport pagenum from './pagenum'\r\nimport coininforeducer from './coininforeducer'\r\n\r\n\r\nexport default combineReducers({\r\n    pagenum,\r\n    coininforeducer\r\n})","import { createStore } from 'redux';\r\nimport reducer from './reducers/index'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n\r\n","import '../../styles.css';\r\nimport React, { useContext, useState } from 'react';\r\nimport CryptoInfo from './CryptoInfo.js';\r\nimport store from '../../store';\r\nimport { PriceUpdate } from '../../api';\r\n\r\nconst PriceContainer = () => {\r\n\r\n // states\r\n const[coins, setCoins] = React.useState([]);\r\n const[showInfo, setshowInfo] = React.useState(false);\r\n const[coinId, setcoinId] = React.useState();\r\n const[choices, setChoices] = useState(\r\n                      {\r\n                        'pagenum':1,\r\n                        'currency':'usd',\r\n                        'toggleTime':0,\r\n                    });\r\n\r\nstore.subscribe(() => { let pagenum = store.getState().pagenum.rank;\r\n                        let currency = store.getState().pagenum.currency;\r\n                        let toggleTime = store.getState().pagenum.toggleTime;\r\n                      setChoices({'pagenum':pagenum,'currency':currency, 'toggleTime':toggleTime});\r\n                      console.log(choices)\r\n                    });\r\n                      \r\n const Pupdate = async () => {\r\n  setCoins(await PriceUpdate(choices.currency,choices.pagenum))\r\n }\r\n setInterval(() => Pupdate(),60000);\r\n React.useEffect(()=>{\r\n   Pupdate();\r\n    },[choices.currency,choices.pagenum]);\r\n\r\n let newArr = new Array();\r\n return (\r\n\r\n     <>\r\n\r\n     {coins.map(coins => (\r\n       <div key = {coins.id} onClick = {() => {setcoinId(coins.id);setshowInfo(true);}}>     \r\n        <div className = {newArr[choices.toggleTime] >= 0 ? \"price-card\" : \"price-card red-shadow\"}>\r\n        \r\n        <img src = {coins.image} />\r\n        <p>{coins.symbol}<br/>\r\n        {coins.current_price}\r\n        </p>\r\n        </div>\r\n\r\n       <p className = \"hidden\">{newArr = [coins.price_change_percentage_1h_in_currency,\r\n         coins.price_change_percentage_24h_in_currency,coins.price_change_percentage_14d_in_currency,coins.price_change_percentage_30d_in_currency]}</p>\r\n        \r\n       </div>\r\n     ))\r\n     }\r\n     \r\n     {showInfo && <CryptoInfo id={coinId} onShowInfo = {setshowInfo}/>}\r\n     {console.log(\"App.js rendered\")}\r\n     </>\r\n );\r\n}\r\n\r\n\r\nexport default PriceContainer;","import React, { useEffect, useRef } from 'react';\r\nimport '../../styles.css';\r\nimport CryptoInfo from './CryptoInfo.js';\r\nimport { CatDetail } from '../../api';\r\n\r\nconst CatDetails = props =>{\r\n    const[catCoins,setCatCoins] = React.useState();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const[showInfo, setshowInfo] = React.useState(false);\r\n    const[coinId, setcoinId] = React.useState();\r\n\r\n    const CateUpdate = async () => {\r\n      setCatCoins(await CatDetail(props.catId));\r\n      setLoading(true);\r\n                        }   \r\n    useEffect(() =>{\r\n        \r\n        CateUpdate();\r\n    },[]);\r\n\r\n    return(\r\n    <>\r\n    {\r\n            loading &&\r\n            catCoins.map(catcoins => (\r\n              <div onClick = {() => {setcoinId(catcoins.id);setshowInfo(true);}}>     \r\n               <div key = {catcoins.id} className = {catcoins.price_change_percentage_1h_in_currency >= 0 ? \"price-card\" : \"price-card red-shadow\"}>\r\n               \r\n               <img src = {catcoins.image} />\r\n               <p>{catcoins.symbol}<br/>\r\n               {catcoins.current_price}\r\n               </p>\r\n               </div>\r\n              </div>\r\n            ))\r\n            }\r\n            \r\n            {showInfo && <CryptoInfo id={coinId} onShowInfo = {setshowInfo}/>}\r\n            {console.log(\"App.js rendered\")}\r\n            </>\r\n        );\r\n}\r\n\r\nexport default CatDetails;","import '../../styles.css';\r\nimport React, { useRef, useState } from 'react';\r\nimport CatDetails from './CatDetails';\r\nimport { CatUpdate } from '../../api';\r\n\r\n\r\nconst CryptoCategories = () =>{\r\n    // refs\r\n    const mainRef = useRef();\r\n    // states\r\n    const [catData,setcatData] = React.useState([]);\r\n\r\n    const [catID,setcatID] = React.useState('');\r\n    const [catDetails,setCatDetails] = React.useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    // fetching\r\n    const CatFetch = async () =>{\r\n        setcatData(await CatUpdate());\r\n        setLoading(true);\r\n    }\r\n\r\n    const getMarketCap = () => {\r\n      let count = 0.0;\r\n      let totalMarketCap = catData.map(cData => count += cData.market_cap);\r\n      return totalMarketCap[totalMarketCap.length - 1];\r\n    }\r\n    \r\n    React.useEffect(() =>{\r\n                    CatFetch();\r\n                    loading && getMarketCap();\r\n                    setCatDetails(false);\r\n    },[]);\r\n    \r\n    return(\r\n      \r\n        <div className = \"cat-main\" ref= {mainRef}>\r\n          <div className = \"cat-header\">\r\n            <h1>Search By Categories</h1>\r\n            {catDetails && <button className = \"btn btn-primary\" onClick = {()=>setCatDetails(false)}>Categories</button>}\r\n          </div>\r\n          {catDetails == false? \r\n          loading && catData.map(catData => (\r\n            <div className = \"cat-card-wrapper\"onClick = {() => {setcatID(catData.id);console.log(catID);setCatDetails(true);}}>     \r\n            <CatCard hoverable\r\n            name={catData.name}\r\n            market_cap={catData.market_cap}\r\n            id = {catData.id}\r\n            volume_24h = {catData.volume_24h}\r\n            market_cap_change_24h = {catData.market_cap_change_24h}\r\n            totalMarketCap = {getMarketCap()}\r\n            />\r\n            </div>\r\n\r\n     )):\r\n     <CatDetails catId = {catID} />}\r\n     \r\n     </div>\r\n    );\r\n}\r\nconst CatCard = props =>{\r\n    return(\r\n      <div key = {props.id} className = {props.market_cap_change_24h >= 0 ? \"cat-card\" : \"cat-card cat-red-shadow\"} >\r\n        \r\n\r\n        <p>{props.name}<br/>\r\n        </p>\r\n      </div>\r\n\r\n    );\r\n   }\r\nexport default CryptoCategories;","import { React, useEffect, useRef, useState } from 'react';\r\nimport { SearchUpdate, } from '../../api';\r\n\r\nconst SearchComponent = () =>{\r\n    const [inputChange, setInputChange] = useState('');\r\n    const [searchCoin, setsearchCoins] = useState();\r\n    const [loading, setLoading] = useState(false);    \r\n    const SearcHead = useRef();\r\n    \r\n    const PriceUpdate = async () => {\r\n                                    let data = await SearchUpdate();\r\n                                    setsearchCoins(data.flat());\r\n                                    console.log(searchCoin);\r\n                                    setLoading(true);\r\n                                }\r\n    if (searchCoin == undefined) {   \r\n    setTimeout(() =>PriceUpdate(),6000);}\r\n    useEffect(() => {\r\n        \r\n                    setLoading(false);\r\n                    PriceUpdate();\r\n                    loading && console.log(\"the coins areS\",searchCoin,loading);\r\n                },[inputChange]);\r\n\r\n    const handleChange = (event) => {\r\n        console.log(inputChange);\r\n        SearcHead.current.value = \"Search  CryptoCurrency\"\r\n        console.log(SearcHead);\r\n        setInputChange(event.target.value);\r\n\r\n    }\r\n    const checkValue = val => parseInt(val) > 0 ? \"btn-success\": \"btn-danger\";\r\n    const makeToFixed = val => {if (val != null){\r\n                                return val.toFixed(2);}}\r\n    \r\n    return(\r\n        <div className = \"search\">\r\n            <h1>Search By Coins</h1>\r\n            <div className = \"searchbox\">\r\n                <div className = \"searchbox-header\" ref = {SearcHead}></div>\r\n                <input type = \"text\" placeholder = \"search cryptocurrency\" onChange = {handleChange}/>\r\n            </div>\r\n            <div className = \"searchResult\">\r\n               <table className = \"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#Rank</th>\r\n                            <th>Name</th>\r\n                            <th>Market Cap</th>\r\n                            <th>Current Price</th>\r\n                            <th>1hr</th>\r\n                            <th>24hr</th>\r\n                            <th>1 Week</th>\r\n                            <th>1 Month</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {inputChange == '' ? \r\n                    loading && searchCoin.sort(function (a, b) {\r\n                        return parseInt(b.price_change_percentage_24h_in_currency) - parseInt(a.price_change_percentage_24h_in_currency);\r\n                      }).map((coins,index) => (\r\n                        index <20 &&\r\n                            <tr>\r\n                                <td>{coins.market_cap_rank}</td>\r\n                                <td>{coins.name}</td>\r\n                                <td>{coins.market_cap}</td>\r\n                                <td>{coins.current_price}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_1h_in_currency)}>\r\n                                        {makeToFixed(coins.price_change_percentage_1h_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_24h_in_currency)}>{makeToFixed(coins.price_change_percentage_24h_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_7d_in_currency)}>{makeToFixed(coins.price_change_percentage_7d_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_30d_in_currency)}>{makeToFixed(coins.price_change_percentage_30d_in_currency)}</td>\r\n                            </tr>    \r\n        )) :loading && searchCoin.sort(function (a, b) {\r\n            return parseInt(a.market_cap_rank) - parseInt(b.market_cap_rank);\r\n          }).filter(coins => coins.name.toLowerCase().startsWith(inputChange)).map(coins => (\r\n                            <tr>\r\n                                <td>{coins.market_cap_rank}</td>\r\n                                <td>{coins.name}</td>\r\n                                <td>{coins.market_cap}</td>\r\n                                <td>{coins.current_price}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_1h_in_currency)}>\r\n                                        {makeToFixed(coins.price_change_percentage_1h_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_24h_in_currency)}>{makeToFixed(coins.price_change_percentage_24h_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_7d_in_currency)}>{makeToFixed(coins.price_change_percentage_7d_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_30d_in_currency)}>{makeToFixed(coins.price_change_percentage_30d_in_currency)}</td>\r\n                            </tr>    \r\n        ))} \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { UpdateNews } from \"../../api\";\r\n\r\nconst CryptoNews = () =>{\r\n    const [news,setNews] = useState();\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const NewsUpdate = async () => {\r\n        setNews(await UpdateNews());\r\n        setLoading(true);\r\n    }\r\n    useEffect(NewsUpdate,[]);\r\n    return(\r\n        <div className = \"news-wrapper\">\r\n            <h1>Top News </h1>\r\n            <hr />\r\n                {loading && news.results.map((x, index)=>\r\n                    index < 10 &&\r\n                        <div className = \"news-item\">\r\n                        <a href = {\"\"+x.url} target=\"_blank\">\r\n                        <div>{x.title}</div>\r\n                        <p>{x.created_at}</p>\r\n                        </a>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CryptoNews;","import React, { useEffect, useState } from 'react';\r\nimport { FngUpdate } from '../../api';\r\nconst FearAndGreedIndex = () =>{\r\n\r\n\r\n    const[fng, setfng] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const UpdateFNG = async () => {\r\n        setfng(await FngUpdate());\r\n        setLoading(true);\r\n    }    \r\n    useEffect(() => UpdateFNG(),[]);\r\n    const findColor = (val) => {\r\n        let value = parseInt(val);\r\n        \r\n        switch(true){\r\n        \r\n        case (value <= 35):\r\n           \r\n            return \"fngfear\";\r\n        case (value > 35 && value <= 65):\r\n            \r\n            return \"fngneutral\"\r\n        \r\n        case (value > 65):\r\n            \r\n            return \"fnggreed\";\r\n        default:\r\n            return \"\";\r\n    \r\n        }\r\n    }\r\n    const updateValue = (sec) =>\r\n        {\r\n            let val = parseInt(sec);\r\n            let hours = parseInt(val/ 3600);\r\n            // let mins = parseInt((val/ 60) - hours * 60);\r\n            // let seconds = parseInt(val - hours * 3600 - mins * 60) ;\r\n            return \"\"+hours+\" Hours\"  ;                 \r\n    }\r\n    \r\n    return(\r\n        <div className = \"fng-index\">\r\n            <div className = \"fng-header\">\r\n                <img src = \"Bitcoin_logo.png\"/>\r\n                <div><h4> Fear and Greed Index</h4></div>\r\n                \r\n            </div>\r\n            <div class = \"label\">By alternative.me</div>\r\n            <hr />\r\n            {console.log(fng)}\r\n            {loading &&<div className = \"fng-body\">\r\n                <p>Index: <span className = {String(findColor(fng.data[0].value))}>{fng.data[0].value}<br />\r\n                {fng.data[0].value_classification}</span></p>\r\n            </div>}\r\n            <div className = \"fng-footer\">\r\n            {loading && <p>Time until update  -  {updateValue(fng.data[0].time_until_update)}\r\n                </p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FearAndGreedIndex;","import React, { useEffect, useState } from \"react\";\r\nimport CryptoInfo from \"../mainComps/CryptoInfo\";\r\nimport { TrendUpdate } from \"../../api\";\r\nconst TrendingCoin = () => {\r\n    const [trending,setTrending] = useState([]);\r\n    const[showInfo, setshowInfo] = React.useState(false);\r\n    const[coinId, setcoinId] = React.useState();\r\n    const TrendUpdt = async () =>{\r\n        setTrending(await TrendUpdate());\r\n    }\r\n    useEffect(TrendUpdt,[]);\r\n\r\n    return(\r\n        <div className = \"trending\">\r\n            <h1> Trending </h1>\r\n            <ul>\r\n            {trending.map(trendCoin => (\r\n                <li className = \"trending-item\" onClick = {() => {setcoinId(trendCoin.item.id);setshowInfo(true);}}>\r\n                    <img src = {trendCoin.item.small} />\r\n                    <div>\r\n                        {trendCoin.item.id}<br />\r\n                        Market Cap Rank: {trendCoin.item.market_cap_rank}\r\n                    </div>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n            {showInfo && <CryptoInfo id={coinId} onShowInfo = {setshowInfo}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrendingCoin;","import React from 'react';\r\nimport cryptoNews from './SideBar/cryptoNews';\r\nimport FearAndGreedIndex from './SideBar/FearAndGreedIndex';\r\nimport TrendingCoin from './SideBar/TrendingCoin';\r\n\r\nconst SideBar = () => {\r\n    return(\r\n       <> \r\n        <FearAndGreedIndex />\r\n        <TrendingCoin />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideBar;","\nimport './styles.css';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport PriceContainer from './Components/mainComps/PriceContainer';\nimport CryptoCategories from './Components/mainComps/CryptoCategories';\nimport SearchComponent from './Components/SearchComp/SearchComponent';\nimport CryptoNews from './Components/SideBar/cryptoNews';\nimport SideBar from './Components/SideBar';\nimport store from './store';\n\n\n\nconst App = () => {\n  console.log(\"Main app rendered\");\n\n  return(\n    <div className= \"container\">\n    <div className = \"option\">\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:0})}>1Hr</button>\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:1})}>24Hr</button>\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:2})}>14D</button>\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:3})}>30D</button>\n     </div>\n     <Switch>\n     <div className = \"main\">\n      <Route path=\"/\" component={() => <PriceContainer />} exact />\n      \n      </div>\n      </Switch>\n      <div className = \"wrapper\">\n        <div className = \"sidebar\">\n          <SideBar />\n          <CryptoNews />\n        </div>\n        <div className = \"section-search\">\n          <SearchComponent />\n          <CryptoCategories />\n        </div>\n          \n      </div>\n    \n    </div>\n\n    \n    \n  );\n}\nexport default App;\n","import CryptoCategories from \"./mainComps/CryptoCategories\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { useRef, useState } from \"react\";\r\nimport store from '../store';\r\n\r\nconst NavBar = () =>{\r\n    const pagenumArr = ['Top 100', '200-300', '300-400', '400-500', '500-600']\r\n    const CurrencyArr = ['USD', 'AUD','EUR','CAD', 'CNY', 'INR' ]\r\n    const [pageMenuText, setPageMenuText] = useState('Top 100')\r\n    const [curMenuText, setCurMenuText] = useState('usd')\r\n\r\n    const handlePageNum = (index) => {\r\n      store.dispatch({type: 'changeRank', rank: (index+1)});\r\n      setPageMenuText(pagenumArr[index]);\r\n      console.log(pageMenuText);\r\n    }\r\n    const handleCurrencyChange = (index) => {\r\n      store.dispatch({type: 'changeCurrency', currency: CurrencyArr[index].toLowerCase()});\r\n      setCurMenuText(CurrencyArr[index]);\r\n      console.log(CurrencyArr);\r\n    }\r\n\r\n    return(\r\n        <nav>\r\n      <div class=\"logo\">\r\n        <Link to = \"/\">\r\n        <img src=\"logo_1.png\"/>\r\n        <div class=\"header\">\r\n          <h1>CryptoWatch</h1><br/>\r\n        <small>One place for market Insights</small>\r\n        \r\n      </div>\r\n      </Link>\r\n      </div>\r\n      <div class=\"menu\">\r\n        <ul>\r\n          <li class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                {pageMenuText}\r\n              </button>\r\n              <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\r\n                {pagenumArr.map((value,index) => \r\n                (<li onClick = {() => handlePageNum(index)}>\r\n                  <a class=\"dropdown-item\" href=\"#\">{value}</a>\r\n                  </li>)\r\n                  )\r\n                }\r\n              </ul>\r\n          </li>\r\n          <li class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                {curMenuText}\r\n              </button>\r\n              <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\r\n              {CurrencyArr.map((value,index) => \r\n                (<li onClick = {() => handleCurrencyChange(index)}>\r\n                  <a class=\"dropdown-item\" href=\"#\">{value}</a>\r\n                  </li>)\r\n                  )\r\n                }\r\n              </ul>\r\n          </li>\r\n          <li><button>Donate</button></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n\r\n    return(\r\n        \r\n        <div className = \"footer\">\r\n            <hr />\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6 col-sm-12\">\r\n                    <div class=\"logo\">\r\n                        <Link to = \"/\">\r\n                        <img src=\"logo_1.png\"/>\r\n                            <div class=\"header\">\r\n                                <h1>CryptoWatch</h1><br/>\r\n                                <small>One place for market Insights</small>    \r\n                            </div>\r\n\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n                <div className = \"col-md-6 col-sm-12\">\r\n                    <div className = \"footer-icons\">\r\n                        <a href = \"https://twitter.com/DGazurel\" target = \"_blank\"><i class=\"bi bi-twitter\"></i></a>\r\n                        <a href = \"https://github.com/Dexter009\" target = \"_blank\"><i class=\"bi bi-github\"></i></a>\r\n                        <a href = \"https://www.linkedin.com/in/dhiraz-gazurel/\" target = \"_blank\"><i class=\"bi bi-linkedin\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './App';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport Footer from './Components/Footer';\nimport store from './store';\n\nconst rend = () =>{\n  ReactDOM.render(\n            <React.StrictMode>\n              <HashRouter>\n                  <NavBar />\n                  <App />\n                  <Footer />\n              </HashRouter>\n            </React.StrictMode>,\n  document.getElementById('root')\n  );\n}\nrend();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}