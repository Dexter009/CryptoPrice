{"version":3,"sources":["api.js","Components/mainComps/CryptoInfo.js","reducers/pagenum.js","reducers/coininforeducer.js","reducers/index.js","store.js","Components/mainComps/PriceContainer.js","Components/mainComps/CatDetails.js","Components/mainComps/CryptoCategories.js","Components/SearchComp/SearchComponent.js","Components/SideBar/FearAndGreedIndex.js","Components/SideBar/TrendingCoin.js","Components/SideBar.js","App.js","Components/Cube.js","Components/NavBar.js","Components/Footer.js","index.js"],"names":["PriceUpdate","currency","pagenumb","a","pArr","fetch","then","response","json","data","InfoUpdate","id","res","console","log","FngUpdate","searchArr","Array","SearchUpdates","i","push","setInterval","SearchUpdate","TrendUpdate","coins","CatUpdate","CatDetail","catId","CryptoInfo","onShowInfo","chartContainerRef","useRef","React","useState","coinInfo","setcoinInfo","loadingStatus","setLoading","chartData","setchartData","chartTime","setchartTime","pricefetch","useEffect","resdata","w","h","candleArr","length","ohlcobject","window","innerwidth","current","innerHTML","chart","createChart","width","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","autoScale","timeScale","timeVisible","autoscale","fitContent","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","cancel","className","onClick","name","market_cap_rank","market_data","total_volume","aud","market_cap","current_price","class","ref","defaultState","rank","toggleTime","coinId","showCoinInfo","combineReducers","pagenum","state","action","type","coininforeducer","showInfo","store","createStore","reducer","PriceContainer","setCoins","setshowInfo","setcoinId","choices","setChoices","subscribe","getState","Pupdate","newArr","map","src","image","symbol","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_14d_in_currency","price_change_percentage_30d_in_currency","CatDetails","props","catCoins","setCatCoins","loading","CateUpdate","catcoins","CatCard","market_cap_change_24h","CryptoCategories","mainRef","catData","setcatData","catID","setcatID","catDetails","setCatDetails","CatFetch","getMarketCap","count","totalMarketCap","cData","hoverable","volume_24h","SearchComponent","inputChange","setInputChange","searchCoin","setsearchCoins","SearcHead","flat","setTimeout","checkValue","val","parseInt","makeToFixed","toFixed","placeholder","onChange","event","value","target","toLowerCase","innerWidth","sort","b","index","price_change_percentage_7d_in_currency","filter","startsWith","FearAndGreedIndex","fng","setfng","UpdateFNG","String","findColor","value_classification","sec","updateValue","time_until_update","TrendingCoin","trending","setTrending","TrendUpdt","trendCoin","item","small","thumb","SideBar","App","dispatch","path","component","exact","NavBar","pagenumArr","CurrencyArr","pageMenuText","setPageMenuText","curMenuText","setCurMenuText","to","handlePageNum","href","handleCurrencyChange","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEMA,EAAW,uCAAG,WAAOC,EAASC,GAAhB,eAAAC,EAAA,6DACVC,EAAQC,MAAM,8DAA8DJ,EAAS,4CAA4CC,EAAS,iEAC/II,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,OAAOA,KAHN,kBAITL,GAJS,2CAAH,wDAQXM,EAAU,uCAAG,WAAOC,GAAP,SAAAR,EAAA,+EACZE,MAAM,0CAA0CM,EAAG,oDACzDL,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAA2B,OAAlBI,QAAQC,IAAIL,GAAaA,MAHrB,2CAAH,sDAOVM,EAAS,uCAAG,sBAAAZ,EAAA,+EACRE,MAAM,mCACZC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAAS,OAAOA,MAHP,2CAAH,qDAMXO,EAAY,IAAIC,MACdC,EAAa,uCAAG,4BAAAf,EAAA,sDACnB,IAAQgB,EAAI,EAAGA,EAAG,GAAIA,IACnBd,MAAM,0GAA0Gc,EAAE,gEAChHb,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAASO,EAAUI,KAAKX,MAJf,yBAMZO,GANY,2CAAH,qDAQnBE,IACAG,aAAY,WAAOL,EAAY,GAAGE,MAAkB,KAEpD,IAAMI,EAAY,uCAAG,sBAAAnB,EAAA,+EACXa,GADW,2CAAH,qDAIZO,EAAW,uCAAG,sBAAApB,EAAA,+EACVE,MAAM,oDACZC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAA2B,OAAlBI,QAAQC,IAAIL,GAAaA,EAAKe,UAH5B,2CAAH,qDAMXC,EAAS,uCAAG,sBAAAtB,EAAA,+EACRE,MAAM,qDACPC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAAS,OAAOA,MAHZ,2CAAH,qDAQTiB,EAAS,uCAAG,WAAOC,GAAP,SAAAxB,EAAA,+EACRE,MAAM,2EAA2EsB,EAAM,2GAC7FrB,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAG,GAAQ,OAAOA,MAHN,2CAAH,sD,OCgFAmB,EAhII,SAAC,GAAoB,IAAnBjB,EAAkB,EAAlBA,GAAGkB,EAAe,EAAfA,WACpBhB,QAAQC,IAAI,uBAEZ,IAAMgB,EAAoBC,mBAE1B,EAA+BC,IAAMC,SAAS,IAA9C,mBAAMC,EAAN,KAAgBC,EAAhB,KACA,EAAmCH,IAAMC,UAAS,GAAlD,mBAAMG,EAAN,KAAqBC,EAArB,KACA,EAAiCL,IAAMC,UAAS,GAAhD,mBAAMK,EAAN,KAAiBC,EAAjB,KACA,EAAiCP,IAAMC,SAAS,GAAhD,mBAAMO,EAAN,KAAiBC,EAAjB,KAGMC,EAAU,uCAAG,sBAAAvC,EAAA,kEACjBgC,EADiB,SACCzB,EAAWC,GADZ,kCAEjB0B,GAAW,GAFM,2CAAH,qDAyEhB,OAVAL,IAAMW,WAAU,WAEZD,IAEA7B,QAAQC,IAAIgB,GAEZQ,GAhEsBjC,MAAM,0CAA0CM,EAAG,8BAA8B6B,GAC9ElC,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAsC,GAEJ,IADA,IAUIC,EAAEC,EAVFC,EAAY,GACR5B,EAAE,EAAGA,EAAIyB,EAAQI,OAAQ7B,IAAI,CACjC,IAAI8B,EAAa,CAAC,KAAO,GAAG,KAAQ,EAAG,KAAQ,EAAG,IAAO,EAAG,MAAS,GACrEA,EAAU,KAAYL,EAAQzB,GAAG,GAAG,IACpC8B,EAAU,KAAWL,EAAQzB,GAAG,GAChC8B,EAAU,KAAWL,EAAQzB,GAAG,GAChC8B,EAAU,IAAUL,EAAQzB,GAAG,GAC/B8B,EAAU,MAAYL,EAAQzB,GAAG,GACjC4B,EAAU3B,KAAK6B,GAGQJ,EAA3BK,OAAOC,WAAa,KAAW,IAAKD,OAAOC,WAAa,IAAQ,IAAQ,IAC7CL,EAA3BI,OAAOC,WAAa,KAAW,IAAKD,OAAOC,WAAa,IAAS,IAAS,IAE1ErB,EAAkBsB,QAAQC,UAAY,GACxC,IAAMC,EAAQC,YAAYzB,EAAkBsB,QAAS,CACjDI,MAAOX,EACPY,OAAQX,EAERY,OAAQ,CACJC,gBAAiB,UACjBC,UAAW,4BAEbC,KAAM,CACJC,UAAW,CACTC,MAAO,WAETC,UAAW,CACTD,MAAO,YAGXE,UAAW,CACTC,KAAMC,IAAcC,QAEtBC,WAAY,CACVC,YAAa,UACbC,WAAW,GAEbC,UAAW,CACTF,YAAa,UACbG,aAAY,EACZC,WAAW,KAGlBpB,EAAMkB,YAAYG,aACCrB,EAAMsB,qBAAqB,CAC3CC,QAAS,UACTC,UAAW,UACXC,gBAAiB,uBACjBC,cAAe,uBACfC,cAAe,uBACfC,YAAa,yBAGFC,QAAQpC,QAQjD,CAACpC,EAAI2B,EAAWE,IAIhB,cAAC,IAAD,CAAW4C,OAAO,SAAlB,SACE,sBAAKC,UAAY,YAAjB,UAEI,sBAAKA,UAAY,cAAjB,UACI,wBAAQA,UAAY,QAAQC,QAAW,kBAAMzD,GAAW,IAAxD,eACA,6BAAKK,EAASqD,OACd,wBAAQF,UAAY,QAAQC,QAAW,kBAAM/C,GAAcD,IAA3D,uBAGHF,GAED,qBAAKiD,UAAY,YAAjB,SACI,gCACA,wCAAWnD,EAASqD,QACpB,yCAAYrD,EAASsD,mBACrB,4CAAetD,EAASuD,YAAYC,aAAaC,OACjD,gDAAmBzD,EAASuD,YAAYG,WAAWD,OACnD,2CAAczD,EAASuD,YAAYI,cAAcF,YAKrD,sBAAKN,UAAY,aAAjB,UACG/C,GAAa,qBAAKwD,MAAQ,gBAAgBC,IAAKjE,IAE/CQ,GAAa,sBAAK+C,UAAY,cAAjB,UACZ,wBAAQA,UAAY,gBAAgBC,QAAW,WAAO7C,EAAa,IAAnE,eACA,wBAAQ4C,UAAY,gBAAgBC,QAAW,WAAO7C,EAAa,IAAnE,eACA,wBAAQ4C,UAAY,gBAAgBC,QAAW,WAAO7C,EAAa,KAAnE,gBACA,wBAAQ4C,UAAY,gBAAgBC,QAAW,WAAO7C,EAAa,KAAnE,gBACA,wBAAQ4C,UAAY,gBAAgBC,QAAW,WAAO7C,EAAa,MAAnE,iBACA,wBAAQ4C,UAAY,gBAAgBC,QAAW,WAAO7C,EAAa,MAAnE,uBAGS,qBAAK4C,UAAY,0B,gBC3HpCW,EAAe,CACGC,KAAK,EACLhG,SAAU,MACViG,WAAY,GCHpC,IAAMF,EAAe,CACjBG,OAAQ,KACRC,cAAc,GCEHC,kBAAgB,CAC3BC,QFCW,WAA+C,IAA9BC,EAA6B,uDAArBP,EAAcQ,EAAO,uCACzD,OAAOA,EAAOC,MACV,IAAK,aACD,kCACOF,GADP,IAEQN,KAAMO,EAAOP,OAEzB,IAAK,iBACD,kCACOM,GADP,IAEQtG,SAAUuG,EAAOvG,WAE7B,IAAK,aACD,kCACOsG,GADP,IAEQL,WAAYM,EAAON,aAE/B,QACI,OAAOK,IElBfG,gBDDW,WAAoD,IAA3BH,EAA0B,uDAApBP,EAAaQ,EAAO,uCAC9D,OAAOA,EAAOC,MACV,IAAK,YACD,kCACOF,GADP,IAEQJ,OAASK,EAAOL,OAChBC,aAAcI,EAAOG,WAEjC,IAAK,cACD,kCACOJ,GADP,IAEQJ,OAAQ,KACRC,cAAc,IAE1B,QACI,OAAOG,MEhBJK,EAFDC,YAAYC,GC4DXC,EAzDQ,WAGtB,MAAyB/E,IAAMC,SAAS,IAAxC,mBAAMT,EAAN,KAAawF,EAAb,KACA,EAA+BhF,IAAMC,UAAS,GAA9C,mBAAM0E,EAAN,KAAgBM,EAAhB,KACA,EAA2BjF,IAAMC,WAAjC,mBAAMkE,EAAN,KAAce,EAAd,KACA,EAA6BjF,mBACR,CACE,QAAU,EACV,SAAW,MACX,WAAa,IAJpC,mBAAMkF,EAAN,KAAeC,EAAf,KAODR,EAAMS,WAAU,WAAQ,IAAIf,EAAUM,EAAMU,WAAWhB,QAAQL,KACnChG,EAAW2G,EAAMU,WAAWhB,QAAQrG,SACpCiG,EAAaU,EAAMU,WAAWhB,QAAQJ,WAC5CkB,EAAW,CAAC,QAAUd,EAAQ,SAAWrG,EAAU,WAAaiG,IAChErF,QAAQC,IAAIqG,MAGjC,IAAMI,EAAO,uCAAG,sBAAApH,EAAA,kEACf6G,EADe,SACAhH,EAAYmH,EAAQlH,SAASkH,EAAQb,SADrC,6EAAH,qDAIbtE,IAAMW,WAAU,WACd4E,MACG,CAACJ,EAAQlH,SAASkH,EAAQb,UAE/B,IAAIkB,EAAS,IAAIvG,MACjB,OAEI,qCAECO,EAAMiG,KAAI,SAAAjG,GAAK,OACd,sBAAsB8D,QAAW,WAAO4B,EAAU1F,EAAMb,IAAIsG,GAAY,IAAxE,UACC,sBAAK5B,UAAamC,EAAOL,EAAQjB,aAAe,EAAI,aAAe,wBAAnE,UAEA,qBAAKwB,IAAOlG,EAAMmG,QAClB,8BAAInG,EAAMoG,OAAO,uBAChBpG,EAAMqE,oBAIR,mBAAGR,UAAY,SAAf,SAAyBmC,EAAS,CAAChG,EAAMqG,uCACvCrG,EAAMsG,wCAAwCtG,EAAMuG,wCAAwCvG,EAAMwG,6CAVxFxG,EAAMb,OAgBnBgG,GAAY,cAAC,EAAD,CAAYhG,GAAIwF,EAAQtE,WAAcoF,IAClDpG,QAAQC,IAAI,uBCdHmH,EAtCI,SAAAC,GACf,MAA8BlG,IAAMC,WAApC,mBAAMkG,EAAN,KAAeC,EAAf,KACA,EAA8BpG,IAAMC,UAAS,GAA7C,mBAAOoG,EAAP,KAAgBhG,EAAhB,KACA,EAA+BL,IAAMC,UAAS,GAA9C,mBAAM0E,EAAN,KAAgBM,EAAhB,KACA,EAA2BjF,IAAMC,WAAjC,mBAAMkE,EAAN,KAAce,EAAd,KAEMoB,EAAU,uCAAG,sBAAAnI,EAAA,kEACjBiI,EADiB,SACC1G,EAAUwG,EAAMvG,OADjB,kCAEjBU,GAAW,GAFM,2CAAH,qDAShB,OALAM,qBAAU,WAEN2F,MACF,IAGF,qCAEQD,GACAF,EAASV,KAAI,SAAAc,GAAQ,OACnB,qBAAKjD,QAAW,WAAO4B,EAAUqB,EAAS5H,IAAIsG,GAAY,IAA1D,SACC,sBAAyB5B,UAAakD,EAASV,wCAA0C,EAAI,aAAe,wBAA5G,UAEA,qBAAKH,IAAOa,EAASZ,QACrB,8BAAIY,EAASX,OAAO,uBACnBW,EAAS1C,mBAJE0C,EAAS5H,SAWvBgG,GAAY,cAAC,EAAD,CAAYhG,GAAIwF,EAAQtE,WAAcoF,IAClDpG,QAAQC,IAAI,uBCqBnB0H,EAAU,SAAAN,GACZ,OAEI,aADF,CACE,KAAG7C,UAAa6C,EAAMO,uBAAyB,EAAI,WAAa,0BAAhE,SAA4FP,EAAM3C,QAM3FmD,EA9DU,WAErB,IAAMC,EAAU5G,mBAEhB,EAA6BC,IAAMC,SAAS,IAA5C,mBAAO2G,EAAP,KAAeC,EAAf,KAEA,EAAyB7G,IAAMC,SAAS,IAAxC,mBAAO6G,EAAP,KAAaC,EAAb,KACA,EAAmC/G,IAAMC,UAAS,GAAlD,mBAAO+G,EAAP,KAAkBC,EAAlB,KACA,EAA8BhH,oBAAS,GAAvC,mBAAOoG,EAAP,KAAgBhG,EAAhB,KAEM6G,EAAQ,uCAAG,sBAAA/I,EAAA,kEACb0I,EADa,SACIpH,IADJ,kCAEbY,GAAW,GAFE,2CAAH,qDAKR8G,EAAe,WACnB,IAAIC,EAAQ,EACRC,EAAiBT,EAAQnB,KAAI,SAAA6B,GAAK,OAAIF,GAASE,EAAM1D,cACzD,OAAOyD,EAAeA,EAAerG,OAAS,IAShD,OANAhB,IAAMW,WAAU,WACAuG,IACAb,GAAWc,IACXF,GAAc,KAC5B,IAIE,sBAAK5D,UAAY,WAAWU,IAAM4C,EAAlC,UACE,sBAAKtD,UAAY,aAAjB,UACE,sDACC2D,GAAc,wBAAQ3D,UAAY,kBAAkBC,QAAW,kBAAI2D,GAAc,IAAnE,2BAEF,GAAdD,EACDX,GAAWO,EAAQnB,KAAI,SAAAmB,GAAO,OAC5B,qBAAKvD,UAAY,mBAAkBC,QAAW,WAAOyD,EAASH,EAAQjI,IAAIE,QAAQC,IAAIgI,GAAOG,GAAc,IAA3G,SACA,cAAC,EAAD,CAASM,WAAS,EAClBhE,KAAMqD,EAAQrD,KACdK,WAAYgD,EAAQhD,WACpBjF,GAAMiI,EAAQjI,GACd6I,WAAcZ,EAAQY,WACtBf,sBAAyBG,EAAQH,sBACjCY,eAAkBF,WAKzB,cAAC,EAAD,CAAYxH,MAASmH,QCwCXW,EA3FS,WACpB,MAAsCxH,mBAAS,IAA/C,mBAAOyH,EAAP,KAAoBC,EAApB,KACA,EAAqC1H,qBAArC,mBAAO2H,EAAP,KAAmBC,EAAnB,KACA,EAA8B5H,oBAAS,GAAvC,mBAAOoG,EAAP,KAAgBhG,EAAhB,KACMyH,EAAY/H,mBAEZ/B,EAAW,uCAAG,4BAAAG,EAAA,sEAC6BmB,IAD7B,OACgBb,EADhB,OAEYoJ,EAAepJ,EAAKsJ,QACpB1H,GAAW,GAHvB,2CAAH,qDAMjB2H,YAAW,kBAAKhK,MAAc,KAC9B2C,qBAAU,WAEMN,GAAW,GACXrC,IACAqI,GAAWxH,QAAQC,IAAI,iBAAiB8I,EAAWvB,KACrD,CAACqB,IAEf,IAOMO,EAAa,SAAAC,GAAG,OAAIC,SAASD,GAAO,EAAI,cAAe,cACvDE,EAAc,SAAAF,GAAQ,GAAW,MAAPA,EACJ,OAAOA,EAAIG,QAAQ,IAE/C,OACI,sBAAKhF,UAAY,SAAjB,UACI,iDACA,sBAAKA,UAAY,YAAjB,UACI,qBAAKA,UAAY,mBAAmBU,IAAO+D,IAC3C,uBAAOrD,KAAO,OAAO6D,YAAc,wBAAwBC,SAhBlD,SAACC,GAClB3J,QAAQC,IAAI4I,GACZI,EAAU1G,QAAQqH,MAAQ,yBAC1B5J,QAAQC,IAAIgJ,GACZH,EAAea,EAAME,OAAOD,MAAME,qBAc9B,qBAAKtF,UAAY,eAAjB,SACG,wBAAOA,UAAanC,OAAO0H,WAAa,IAAM,8BAA8B,mBAA5E,UACK,gCACI,+BACC1H,OAAO0H,WAAa,KAAM,uCACvB,sCACC1H,OAAO0H,WAAa,KAAM,4CAC3B,+CACC1H,OAAO0H,WAAa,KAAM,qCAC3B,sCACA,wCACA,8CAGR,gCACgB,IAAflB,EACDrB,GAAWuB,EAAWiB,MAAK,SAAU1K,EAAG2K,GACpC,OAAOX,SAASW,EAAEhD,yCAA2CqC,SAAShK,EAAE2H,4CACvEL,KAAI,SAACjG,EAAMuJ,GAAP,OACLA,EAAO,IACH,+BACK7H,OAAO0H,WAAa,KAAO,6BAAKpJ,EAAMgE,kBACvC,6BAAKhE,EAAM+D,OACVrC,OAAO0H,WAAa,KAAO,6BAAKpJ,EAAMoE,aACvC,6BAAKpE,EAAMqE,gBACV3C,OAAO0H,WAAa,KAAO,oBAAIvF,UAAa4E,EAAWzI,EAAMqG,wCAAlC,SACnBuC,EAAY5I,EAAMqG,0CAC3B,oBAAIxC,UAAa4E,EAAWzI,EAAMsG,yCAAlC,SAA6EsC,EAAY5I,EAAMsG,2CAC/F,oBAAIzC,UAAa4E,EAAWzI,EAAMwJ,wCAAlC,SAA4EZ,EAAY5I,EAAMwJ,0CAC9F,oBAAI3F,UAAa4E,EAAWzI,EAAMwG,yCAAlC,SAA6EoC,EAAY5I,EAAMwG,iDAEnHK,GAAWuB,EAAWiB,MAAK,SAAU1K,EAAG2K,GACxC,OAAOX,SAAShK,EAAEqF,iBAAmB2E,SAASW,EAAEtF,oBAC/CyF,QAAO,SAAAzJ,GAAK,OAAIA,EAAM+D,KAAKoF,cAAcO,WAAWxB,MAAcjC,KAAI,SAAAjG,GAAK,OAC5D,+BACK0B,OAAO0H,WAAa,KAAO,6BAAKpJ,EAAMgE,kBACvC,6BAAKhE,EAAM+D,OACVrC,OAAO0H,WAAa,KAAO,6BAAKpJ,EAAMoE,aACvC,6BAAKpE,EAAMqE,gBACV3C,OAAO0H,WAAa,KAAO,oBAAIvF,UAAa4E,EAAWzI,EAAMqG,wCAAlC,SACnBuC,EAAY5I,EAAMqG,0CAC3B,oBAAIxC,UAAa4E,EAAWzI,EAAMsG,yCAAlC,SAA6EsC,EAAY5I,EAAMsG,2CAC/F,oBAAIzC,UAAa4E,EAAWzI,EAAMwJ,wCAAlC,SAA4EZ,EAAY5I,EAAMwJ,0CAC9F,oBAAI3F,UAAa4E,EAAWzI,EAAMwG,yCAAlC,SAA6EoC,EAAY5I,EAAMwG,4DCrBhHmD,EA7DW,WAGtB,MAAqBlJ,mBAAS,IAA9B,mBAAMmJ,EAAN,KAAWC,EAAX,KACA,EAA8BpJ,oBAAS,GAAvC,mBAAOoG,EAAP,KAAgBhG,EAAhB,KACMiJ,EAAS,uCAAG,sBAAAnL,EAAA,kEACdkL,EADc,SACDtK,IADC,kCAEdsB,GAAW,GAFG,2CAAH,qDAIfM,qBAAU,kBAAM2I,MAAY,IA8B5B,OACI,sBAAKjG,UAAY,YAAjB,UACI,sBAAKA,UAAY,aAAjB,UACI,qBAAKqC,IAAM,kCACX,8BAAK,4DAGT,qBAAK5B,MAAQ,QAAb,+BACA,uBACCjF,QAAQC,IAAIsK,GACZ/C,GAAU,qBAAKhD,UAAY,WAAjB,SACP,wCAAU,uBAAMA,UAAakG,OAxCvB,SAACrB,GACf,IAAIO,EAAQN,SAASD,GAErB,QAAO,GAEP,KAAMO,GAAS,GAEX,MAAO,UACX,KAAMA,EAAQ,IAAMA,GAAS,GAEzB,MAAO,aAEX,KAAMA,EAAQ,GAEV,MAAO,WACX,QACI,MAAO,IAwBiCe,CAAUJ,EAAI3K,KAAK,GAAGgK,QAAhD,UAA0DW,EAAI3K,KAAK,GAAGgK,MAAM,uBACrFW,EAAI3K,KAAK,GAAGgL,6BAEjB,qBAAKpG,UAAY,aAAjB,SACCgD,GAAW,uDAxBA,SAACqD,GAEb,IAAIxB,EAAMC,SAASuB,GAInB,OAHYvB,SAASD,EAAK,MAGV,SAkBsByB,CAAYP,EAAI3K,KAAK,GAAGmL,4BCzB3DC,EA5BM,WACjB,MAA+B5J,mBAAS,IAAxC,mBAAO6J,EAAP,KAAgBC,EAAhB,KACA,EAA+B/J,IAAMC,UAAS,GAA9C,mBAAM0E,EAAN,KAAgBM,EAAhB,KACA,EAA2BjF,IAAMC,WAAjC,mBAAMkE,EAAN,KAAce,EAAd,KACM8E,EAAS,uCAAG,sBAAA7L,EAAA,kEACd4L,EADc,SACIxK,IADJ,6EAAH,qDAKf,OAFAoB,oBAAUqJ,EAAU,IAGhB,sBAAK3G,UAAY,WAAjB,UACI,4CACA,6BACCyG,EAASrE,KAAI,SAAAwE,GAAS,OACnB,qBAAI5G,UAAY,gBAAgBC,QAAW,WAAO4B,EAAU+E,EAAUC,KAAKvL,IAAIsG,GAAY,IAA3F,UACI,qBAAKS,IAAOxE,OAAO0H,WAAa,IAAMqB,EAAUC,KAAKC,MAAOF,EAAUC,KAAKE,QAC3E,gCACKH,EAAUC,KAAKvL,GAAG,uBADvB,oBAEsBsL,EAAUC,KAAK1G,2BAK5CmB,GAAY,cAAC,EAAD,CAAYhG,GAAIwF,EAAQtE,WAAcoF,QCXhDoF,EAVC,WACZ,OACG,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,Q,wCCwCOC,GC9CQtK,YDWX,WAGV,OAFAnB,QAAQC,IAAI,qBAGV,sBAAKuE,UAAW,YAAhB,UACA,sBAAKA,UAAY,SAAjB,UACG,wBAAQA,UAAY,eAAeC,QAAW,kBAAMsB,EAAM2F,SAAS,CAAC9F,KAAK,aAAaP,WAAW,KAAjG,iBACA,wBAAQb,UAAY,eAAeC,QAAW,kBAAMsB,EAAM2F,SAAS,CAAC9F,KAAK,aAAaP,WAAW,KAAjG,kBACA,wBAAQb,UAAY,eAAeC,QAAW,kBAAMsB,EAAM2F,SAAS,CAAC9F,KAAK,aAAaP,WAAW,KAAjG,iBACA,wBAAQb,UAAY,eAAeC,QAAW,kBAAMsB,EAAM2F,SAAS,CAAC9F,KAAK,aAAaP,WAAW,KAAjG,oBAEF,cAAC,IAAD,UACA,qBAAKb,UAAY,OAAjB,SAEEnC,OAAO0H,WAAa,IAAK,cAAC,IAAD,CAAO4B,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,KAAoBC,OAAK,IAAI,OAGxF,sBAAKrH,UAAY,UAAjB,UACE,qBAAKA,UAAY,UAAjB,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAY,iBAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,e,QE+BKsH,EAhEA,WACX,IAAMC,EAAa,CAAC,UAAW,UAAW,UAAW,UAAW,WAC1DC,EAAc,CAAC,MAAO,MAAM,MAAM,MAAO,MAAO,OACtD,EAAwC5K,mBAAS,WAAjD,mBAAO6K,EAAP,KAAqBC,EAArB,KACA,EAAsC9K,mBAAS,OAA/C,mBAAO+K,EAAP,KAAoBC,EAApB,KAaA,OACI,gCACF,qBAAKnH,MAAM,OAAX,SACE,eAAC,IAAD,CAAMoH,GAAK,IAAX,UACA,qBAAKxF,IAAI,yBACT,sBAAK5B,MAAM,SAAX,UACE,6CAAoB,uBACtB,0EAKF,qBAAKA,MAAM,OAAX,SACE,+BACE,qBAAIA,MAAM,WAAV,UACI,wBAAQA,MAAM,oCAAoCW,KAAK,SAAS9F,GAAG,sBAAsB,iBAAe,WAAW,gBAAc,QAAjI,SACGmM,IAEH,oBAAIhH,MAAM,mCAAmC,kBAAgB,sBAA7D,SACG8G,EAAWnF,KAAI,SAACgD,EAAMM,GAAP,OACf,oBAAIzF,QAAW,kBA/BN,SAACyF,GACrBnE,EAAM2F,SAAS,CAAC9F,KAAM,aAAcR,KAAO8E,EAAM,IACjDgC,EAAgBH,EAAW7B,IAC3BlK,QAAQC,IAAIgM,GA4BoBK,CAAcpC,IAAnC,SACC,mBAAGjF,MAAM,gBAAgBsH,KAAK,IAA9B,SAAmC3C,cAM3C,qBAAI3E,MAAM,WAAV,UACI,wBAAQA,MAAM,oCAAoCW,KAAK,SAAS9F,GAAG,sBAAsB,iBAAe,WAAW,gBAAc,QAAjI,SACGqM,IAEH,oBAAIlH,MAAM,mCAAmC,kBAAgB,sBAA7D,SACC+G,EAAYpF,KAAI,SAACgD,EAAMM,GAAP,OACd,oBAAIzF,QAAW,kBAvCC,SAACyF,GAC5BnE,EAAM2F,SAAS,CAAC9F,KAAM,iBAAkBxG,SAAU4M,EAAY9B,GAAOJ,gBACrEsC,EAAeJ,EAAY9B,IAC3BlK,QAAQC,IAAI+L,GAoCoBQ,CAAqBtC,IAA1C,SACC,mBAAGjF,MAAM,gBAAgBsH,KAAK,IAA9B,SAAmC3C,cAM3C,6BAAI,wBAAQpF,UAAY,MAApB,+BC5BCiI,EA/BA,WAEX,OAEI,sBAAKjI,UAAY,SAAjB,UACI,uBACA,sBAAKA,UAAY,MAAjB,UACI,qBAAKA,UAAY,qBAAjB,SACI,qBAAKS,MAAM,OAAX,SACI,eAAC,IAAD,CAAMoH,GAAK,IAAX,UACA,qBAAKxF,IAAI,yBACL,sBAAK5B,MAAM,SAAX,UACI,6CAAoB,uBACpB,4EAMhB,qBAAKT,UAAY,qBAAjB,SACI,sBAAKA,UAAY,eAAjB,UACI,mBAAG+H,KAAO,+BAA+B1C,OAAS,SAAlD,SAA2D,mBAAG5E,MAAM,oBACpE,mBAAGsH,KAAO,+BAA+B1C,OAAS,SAAlD,SAA2D,mBAAG5E,MAAM,mBACpE,mBAAGsH,KAAO,8CAA8C1C,OAAS,SAAjE,SAA0E,mBAAG5E,MAAM,iCCbzGyH,IAASC,OACC,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SAGhBC,SAASC,eAAe,W","file":"static/js/main.adec6e99.chunk.js","sourcesContent":["\r\n//  For PriceCointainer\r\nconst PriceUpdate = async (currency,pagenumb) => {\r\n    const pArr =  fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency='+currency+'&order=market_cap_desc&per_page=108&page='+pagenumb+'&sparkline=false&price_change_percentage=1h%2C24h%2C14d%2C30d')\r\n    .then(response => response.json())\r\n    .then(data => {return data})\r\n    return pArr;\r\n}\r\n// For crypto Info Component\r\n\r\nconst InfoUpdate = async (id) =>{\r\nreturn fetch('https://api.coingecko.com/api/v3/coins/'+id+'?localization=en&market_data=true&sparkline=true')\r\n.then(res => res.json())\r\n.then(data => {console.log(data);return data})\r\n}\r\n\r\n// FNG index\r\nconst FngUpdate = async () => {\r\n   return fetch('https://api.alternative.me/fng/')\r\n   .then(res => res.json())\r\n   .then(data => {return data})\r\n}\r\n// searchUpdate\r\nlet searchArr = new Array();\r\nconst SearchUpdates = async() => {\r\n   for(let i = 1; i< 15; i++){\r\n      fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=AUD&order=market_cap_desc&per_page=250&page='+i+'&sparkline=false&price_change_percentage=1h%2C24h%2C7d%2C30d')\r\n       .then(res => res.json())\r\n       .then(data => {searchArr.push(data);})      \r\n   }\r\n   return searchArr;\r\n}\r\nSearchUpdates();\r\nsetInterval(() => {searchArr = [];SearchUpdates();},5000);\r\n\r\nconst SearchUpdate = async () => {\r\n   return searchArr;\r\n}\r\n// Trending\r\nconst TrendUpdate = async () =>{\r\n   return fetch('https://api.coingecko.com/api/v3/search/trending')\r\n   .then(res => res.json())\r\n   .then(data => {console.log(data);return data.coins})\r\n}\r\n// Categories\r\nconst CatUpdate = async () => {\r\n   return fetch('https://api.coingecko.com/api/v3/coins/categories')\r\n        .then(res => res.json())\r\n        .then(data => {return data})\r\n}\r\n\r\n// INDIVIDUAL Category\r\n\r\nconst CatDetail = async (catId) =>{\r\n   return fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&category='+catId+'&order=market_cap_desc&per_page=250&page=1&sparkline=false&price_change_percentage=1h%2C24h%2C14d%2C30d')\r\n   .then(res => res.json())\r\n   .then(data =>{return data;})\r\n}\r\n\r\n// NewsUpdate\r\nconst APIKEY = '72d821f774bd40cc99dd31ab854dac8dcee15542'\r\nconst UpdateNews = async () =>{\r\n   return fetch('https://cryptopanic.com/api/v1/posts/?auth_token='+APIKEY+'&public=true')\r\n   .then(res => res.json())\r\n   .then(data => {console.log(data);return data;})\r\n}\r\n\r\nexport {PriceUpdate, InfoUpdate, FngUpdate, SearchUpdate, SearchUpdates, TrendUpdate, CatUpdate, CatDetail, UpdateNews}\r\n","import React, { createRef, useRef } from 'react';\r\nimport { createChart, CrosshairMode } from 'lightweight-charts';\r\nimport Draggable, {DraggableCore} from 'react-draggable';\r\nimport { InfoUpdate } from '../../api'; \r\n\r\nconst CryptoInfo = ({id,onShowInfo}) =>{\r\n    console.log(\"cryptoinfo rendered\");\r\n    // refs and states\r\n    const chartContainerRef = useRef();\r\n    \r\n    const[coinInfo, setcoinInfo] = React.useState({});    \r\n    const[loadingStatus, setLoading] = React.useState(false);\r\n    const[chartData, setchartData] = React.useState(false);\r\n    const[chartTime, setchartTime] = React.useState(1);\r\n    \r\n    \r\n    const pricefetch = async () => {\r\n      setcoinInfo(await InfoUpdate(id));\r\n      setLoading(true);\r\n    }\r\n    \r\n    const ChartFetch = () => {fetch('https://api.coingecko.com/api/v3/coins/'+id+'/ohlc?vs_currency=aud&days='+chartTime)\r\n                                .then(res => res.json())\r\n                                .then(resdata =>{\r\n                                  let candleArr = [];\r\n                                  for(let i=0; i < resdata.length; i++){\r\n                                      let ohlcobject = {'time':'','open': 0, 'high': 0, 'low': 0, 'close': 0};\r\n                                      ohlcobject['time'] = (resdata[i][0]/1000);\r\n                                      ohlcobject['open'] = resdata[i][1];\r\n                                      ohlcobject['high'] = resdata[i][2];\r\n                                      ohlcobject['low'] = resdata[i][3];\r\n                                      ohlcobject['close'] = resdata[i][4];\r\n                                      candleArr.push(ohlcobject);    \r\n                                  }\r\n                                  let w,h;\r\n                                  window.innerwidth > 1024 ? w = 600: window.innerwidth < 600? w =250: w =400;\r\n                                  window.innerwidth > 1024 ? h = 400: window.innerwidth < 600? h = 250: h = 350;\r\n    \r\n                                  chartContainerRef.current.innerHTML = '';\r\n                                const chart = createChart(chartContainerRef.current, { \r\n                                    width: w,\r\n                                    height: h,\r\n                                    \r\n                                    layout: {\r\n                                        backgroundColor: '#253248',\r\n                                        textColor: 'rgba(255, 255, 255, 0.9)',\r\n                                      },\r\n                                      grid: {\r\n                                        vertLines: {\r\n                                          color: '#334158',\r\n                                        },\r\n                                        horzLines: {\r\n                                          color: '#334158',\r\n                                        },\r\n                                      },\r\n                                      crosshair: {\r\n                                        mode: CrosshairMode.Normal,\r\n                                      },\r\n                                      priceScale: {\r\n                                        borderColor: '#485c7b',\r\n                                        autoScale: true,\r\n                                      },\r\n                                      timeScale: {\r\n                                        borderColor: '#485c7b',\r\n                                        timeVisible:true,\r\n                                        autoscale: true,\r\n                                      },\r\n                                 });\r\n                                 chart.timeScale().fitContent();\r\n                                 var candleSeries = chart.addCandlestickSeries({\r\n                                    upColor: '#00ff00',\r\n                                    downColor: '#ff0000',\r\n                                    borderDownColor: 'rgba(255, 144, 0, 1)',\r\n                                    borderUpColor: 'rgba(255, 144, 0, 1)',\r\n                                    wickDownColor: 'rgba(255, 144, 0, 1)',\r\n                                    wickUpColor: 'rgba(255, 144, 0, 1)',\r\n                                  });\r\n\r\n                                  candleSeries.setData(candleArr);})}\r\n    React.useEffect(() => {\r\n        \r\n        pricefetch();\r\n\r\n        console.log(chartContainerRef);\r\n\r\n        chartData && ChartFetch();\r\n    },[id, chartData, chartTime]);\r\n\r\n    \r\n    return(\r\n      <Draggable cancel=\".close\">\r\n        <div className = \"info-card\">\r\n            \r\n            <div className = \"info-header\">\r\n                <button className = \"close\" onClick = {() => onShowInfo(false)}>X</button>\r\n                <h1>{coinInfo.name}</h1>\r\n                <button className = \"close\" onClick = {() => setchartData(!chartData)}>Charts</button>\r\n            </div>\r\n            \r\n            {loadingStatus &&\r\n            \r\n            <div className = \"info-main\">\r\n                <pre>\r\n                <p>Name : {coinInfo.name}</p>\r\n                <p>Rank : #{coinInfo.market_cap_rank}</p>\r\n                <p>Volume : AU{coinInfo.market_data.total_volume.aud}</p>\r\n                <p>market_cap : AU{coinInfo.market_data.market_cap.aud}</p>\r\n                <p>Price : AU{coinInfo.market_data.current_price.aud}</p>\r\n                </pre>\r\n            </div>\r\n          } \r\n          \r\n            <div className = \"info-chart\">\r\n              {chartData && <div class = \"chart-wrapper\" ref={chartContainerRef} ></div>}\r\n               \r\n              {chartData && <div className = \"charts-time\">\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(1);}}>1</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(7);}}>7</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(14);}}>14</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(30);}}>30</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(180);}}>180</button>\r\n                <button className = \"btn btn-light\" onClick = {() => {setchartTime(365);}}>365</button>\r\n              </div>}\r\n            </div>\r\n                         <div className = \"info-indicators\"></div>\r\n        \r\n         </div>\r\n         </Draggable>                 \r\n        );\r\n\r\n}\r\n\r\n\r\nexport default CryptoInfo;","\r\nconst defaultState = {\r\n                        rank:1, \r\n                        currency: 'usd',\r\n                        toggleTime: 0\r\n}\r\n\r\nexport default function pagenum(state = defaultState, action){\r\n    switch(action.type){\r\n        case 'changeRank':\r\n            return{ \r\n                ...state,\r\n                    rank: action.rank\r\n                }\r\n        case 'changeCurrency':\r\n            return{\r\n                ...state,\r\n                    currency: action.currency\r\n            }\r\n        case 'changeTime':\r\n            return{\r\n                ...state,\r\n                    toggleTime: action.toggleTime\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst defaultState = {\r\n    coinId: null,\r\n    showCoinInfo: false,\r\n}\r\n\r\nexport default function coininforeducer(state=defaultState,action){\r\n    switch(action.type){\r\n        case 'setCoinId':\r\n            return{\r\n                ...state,\r\n                    coinId : action.coinId,\r\n                    showCoinInfo: action.showInfo,\r\n            }\r\n        case 'unsetCoinId':\r\n            return{\r\n                ...state,\r\n                    coinId: null,\r\n                    showCoinInfo: false,\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n    \r\n}","import { combineReducers } from 'redux'\r\nimport pagenum from './pagenum'\r\nimport coininforeducer from './coininforeducer'\r\n\r\n\r\nexport default combineReducers({\r\n    pagenum,\r\n    coininforeducer\r\n})","import { createStore } from 'redux';\r\nimport reducer from './reducers/index'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n\r\n","import '../../styles.css';\r\nimport React, { useContext, useState } from 'react';\r\nimport CryptoInfo from './CryptoInfo.js';\r\nimport store from '../../store';\r\nimport { PriceUpdate } from '../../api';\r\n\r\nconst PriceContainer = () => {\r\n\r\n // states\r\n const[coins, setCoins] = React.useState([]);\r\n const[showInfo, setshowInfo] = React.useState(false);\r\n const[coinId, setcoinId] = React.useState();\r\n const[choices, setChoices] = useState(\r\n                      {\r\n                        'pagenum':1,\r\n                        'currency':'usd',\r\n                        'toggleTime':0,\r\n                    });\r\n\r\nstore.subscribe(() => { let pagenum = store.getState().pagenum.rank;\r\n                        let currency = store.getState().pagenum.currency;\r\n                        let toggleTime = store.getState().pagenum.toggleTime;\r\n                      setChoices({'pagenum':pagenum,'currency':currency, 'toggleTime':toggleTime});\r\n                      console.log(choices)\r\n                    });\r\n                      \r\n const Pupdate = async () => {\r\n  setCoins(await PriceUpdate(choices.currency,choices.pagenum))\r\n }\r\n\r\n React.useEffect(()=>{\r\n   Pupdate();\r\n    },[choices.currency,choices.pagenum]);\r\n\r\n let newArr = new Array();\r\n return (\r\n\r\n     <>\r\n\r\n     {coins.map(coins => (\r\n       <div key = {coins.id} onClick = {() => {setcoinId(coins.id);setshowInfo(true);}}>     \r\n        <div className = {newArr[choices.toggleTime] >= 0 ? \"price-card\" : \"price-card red-shadow\"}>\r\n        \r\n        <img src = {coins.image} />\r\n        <p>{coins.symbol}<br/>\r\n        {coins.current_price}\r\n        </p>\r\n        </div>\r\n\r\n       <p className = \"hidden\">{newArr = [coins.price_change_percentage_1h_in_currency,\r\n         coins.price_change_percentage_24h_in_currency,coins.price_change_percentage_14d_in_currency,coins.price_change_percentage_30d_in_currency]}</p>\r\n        \r\n       </div>\r\n     ))\r\n     }\r\n     \r\n     {showInfo && <CryptoInfo id={coinId} onShowInfo = {setshowInfo}/>}\r\n     {console.log(\"App.js rendered\")}\r\n     </>\r\n );\r\n}\r\n\r\n\r\nexport default PriceContainer;","import React, { useEffect, useRef } from 'react';\r\nimport '../../styles.css';\r\nimport CryptoInfo from './CryptoInfo.js';\r\nimport { CatDetail } from '../../api';\r\n\r\nconst CatDetails = props =>{\r\n    const[catCoins,setCatCoins] = React.useState();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const[showInfo, setshowInfo] = React.useState(false);\r\n    const[coinId, setcoinId] = React.useState();\r\n\r\n    const CateUpdate = async () => {\r\n      setCatCoins(await CatDetail(props.catId));\r\n      setLoading(true);\r\n                        }   \r\n    useEffect(() =>{\r\n        \r\n        CateUpdate();\r\n    },[]);\r\n\r\n    return(\r\n    <>\r\n    {\r\n            loading &&\r\n            catCoins.map(catcoins => (\r\n              <div onClick = {() => {setcoinId(catcoins.id);setshowInfo(true);}}>     \r\n               <div key = {catcoins.id} className = {catcoins.price_change_percentage_1h_in_currency >= 0 ? \"price-card\" : \"price-card red-shadow\"}>\r\n               \r\n               <img src = {catcoins.image} />\r\n               <p>{catcoins.symbol}<br/>\r\n               {catcoins.current_price}\r\n               </p>\r\n               </div>\r\n              </div>\r\n            ))\r\n            }\r\n            \r\n            {showInfo && <CryptoInfo id={coinId} onShowInfo = {setshowInfo}/>}\r\n            {console.log(\"App.js rendered\")}\r\n            </>\r\n        );\r\n}\r\n\r\nexport default CatDetails;","import '../../styles.css';\r\nimport React, { useRef, useState } from 'react';\r\nimport CatDetails from './CatDetails';\r\nimport { CatUpdate } from '../../api';\r\n\r\n\r\nconst CryptoCategories = () =>{\r\n    // refs\r\n    const mainRef = useRef();\r\n    // states\r\n    const [catData,setcatData] = React.useState([]);\r\n\r\n    const [catID,setcatID] = React.useState('');\r\n    const [catDetails,setCatDetails] = React.useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    // fetching\r\n    const CatFetch = async () =>{\r\n        setcatData(await CatUpdate());\r\n        setLoading(true);\r\n    }\r\n\r\n    const getMarketCap = () => {\r\n      let count = 0.0;\r\n      let totalMarketCap = catData.map(cData => count += cData.market_cap);\r\n      return totalMarketCap[totalMarketCap.length - 1];\r\n    }\r\n    \r\n    React.useEffect(() =>{\r\n                    CatFetch();\r\n                    loading && getMarketCap();\r\n                    setCatDetails(false);\r\n    },[]);\r\n    \r\n    return(\r\n      \r\n        <div className = \"cat-main\" ref= {mainRef}>\r\n          <div className = \"cat-header\">\r\n            <h1>Search By Categories</h1>\r\n            {catDetails && <button className = \"btn btn-primary\" onClick = {()=>setCatDetails(false)}>Categories</button>}\r\n          </div>\r\n          {catDetails == false? \r\n          loading && catData.map(catData => (\r\n            <div className = \"cat-card-wrapper\"onClick = {() => {setcatID(catData.id);console.log(catID);setCatDetails(true);}}>     \r\n            <CatCard hoverable\r\n            name={catData.name}\r\n            market_cap={catData.market_cap}\r\n            id = {catData.id}\r\n            volume_24h = {catData.volume_24h}\r\n            market_cap_change_24h = {catData.market_cap_change_24h}\r\n            totalMarketCap = {getMarketCap()}\r\n            />\r\n            </div>\r\n\r\n     )):\r\n     <CatDetails catId = {catID} />}\r\n     \r\n     </div>\r\n    );\r\n}\r\nconst CatCard = props =>{\r\n    return(\r\n      // <div key = {props.id} className = {props.market_cap_change_24h >= 0 ? \"cat-card\" : \"cat-card cat-red-shadow\"} >\r\n        <p className = {props.market_cap_change_24h >= 0 ? \"cat-card\" : \"cat-card cat-red-shadow\"}>{props.name}\r\n        </p>\r\n      // </div>\r\n\r\n    );\r\n   }\r\nexport default CryptoCategories;","import { React, useEffect, useRef, useState } from 'react';\r\nimport { SearchUpdate, } from '../../api';\r\n\r\nconst SearchComponent = () =>{\r\n    const [inputChange, setInputChange] = useState('');\r\n    const [searchCoin, setsearchCoins] = useState();\r\n    const [loading, setLoading] = useState(false);    \r\n    const SearcHead = useRef();\r\n    \r\n    const PriceUpdate = async () => {\r\n                                    let data = await SearchUpdate();\r\n                                    setsearchCoins(data.flat());\r\n                                    setLoading(true);\r\n                                }\r\n        \r\n    setTimeout(() =>PriceUpdate(),6000);\r\n    useEffect(() => {\r\n        \r\n                    setLoading(false);\r\n                    PriceUpdate();\r\n                    loading && console.log(\"the coins areS\",searchCoin,loading);\r\n                },[inputChange]);\r\n\r\n    const handleChange = (event) => {\r\n        console.log(inputChange);\r\n        SearcHead.current.value = \"Search  CryptoCurrency\"\r\n        console.log(SearcHead);\r\n        setInputChange(event.target.value.toLowerCase());\r\n\r\n    }\r\n    const checkValue = val => parseInt(val) > 0 ? \"btn-success\": \"btn-danger\";\r\n    const makeToFixed = val => {if (val != null){\r\n                                return val.toFixed(2);}}\r\n    \r\n    return(\r\n        <div className = \"search\">\r\n            <h1>Search By Coins</h1>\r\n            <div className = \"searchbox\">\r\n                <div className = \"searchbox-header\" ref = {SearcHead}></div>\r\n                <input type = \"text\" placeholder = \"search cryptocurrency\" onChange = {handleChange}/>\r\n            </div>\r\n            <div className = \"searchResult\">\r\n               <table className = {window.innerWidth < 820 ? \"table-responsive table-dark\":\"table table-dark\"}>\r\n                    <thead>\r\n                        <tr>\r\n                        {window.innerWidth > 600 &&<th>#Rank</th>}\r\n                            <th>Name</th>\r\n                            {window.innerWidth > 810 &&<th>Market Cap</th>}\r\n                            <th>Current Price</th>\r\n                            {window.innerWidth > 600 &&<th>1hr</th>}\r\n                            <th>24hr</th>\r\n                            <th>1 Week</th>\r\n                            <th>1 Month</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {inputChange == '' ? \r\n                    loading && searchCoin.sort(function (a, b) {\r\n                        return parseInt(b.price_change_percentage_24h_in_currency) - parseInt(a.price_change_percentage_24h_in_currency);\r\n                      }).map((coins,index) => (\r\n                        index <20 &&\r\n                            <tr>\r\n                                {window.innerWidth > 600 && <td>{coins.market_cap_rank}</td>}\r\n                                <td>{coins.name}</td>\r\n                                {window.innerWidth > 810 && <td>{coins.market_cap}</td>}\r\n                                <td>{coins.current_price}</td>\r\n                                {window.innerWidth > 600 && <td className = {checkValue(coins.price_change_percentage_1h_in_currency)}>\r\n                                        {makeToFixed(coins.price_change_percentage_1h_in_currency)}</td>}\r\n                                <td className = {checkValue(coins.price_change_percentage_24h_in_currency)}>{makeToFixed(coins.price_change_percentage_24h_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_7d_in_currency)}>{makeToFixed(coins.price_change_percentage_7d_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_30d_in_currency)}>{makeToFixed(coins.price_change_percentage_30d_in_currency)}</td>\r\n                            </tr>    \r\n        )) :loading && searchCoin.sort(function (a, b) {\r\n            return parseInt(a.market_cap_rank) - parseInt(b.market_cap_rank);\r\n          }).filter(coins => coins.name.toLowerCase().startsWith(inputChange)).map(coins => (\r\n                            <tr>\r\n                                {window.innerWidth > 600 && <td>{coins.market_cap_rank}</td>}\r\n                                <td>{coins.name}</td>\r\n                                {window.innerWidth > 810 && <td>{coins.market_cap}</td>}\r\n                                <td>{coins.current_price}</td>\r\n                                {window.innerWidth > 600 && <td className = {checkValue(coins.price_change_percentage_1h_in_currency)}>\r\n                                        {makeToFixed(coins.price_change_percentage_1h_in_currency)}</td>}\r\n                                <td className = {checkValue(coins.price_change_percentage_24h_in_currency)}>{makeToFixed(coins.price_change_percentage_24h_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_7d_in_currency)}>{makeToFixed(coins.price_change_percentage_7d_in_currency)}</td>\r\n                                <td className = {checkValue(coins.price_change_percentage_30d_in_currency)}>{makeToFixed(coins.price_change_percentage_30d_in_currency)}</td>\r\n                            </tr>    \r\n        ))} \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchComponent;","import React, { useEffect, useState } from 'react';\r\nimport { FngUpdate } from '../../api';\r\nconst FearAndGreedIndex = () =>{\r\n\r\n\r\n    const[fng, setfng] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const UpdateFNG = async () => {\r\n        setfng(await FngUpdate());\r\n        setLoading(true);\r\n    }    \r\n    useEffect(() => UpdateFNG(),[]);\r\n    const findColor = (val) => {\r\n        let value = parseInt(val);\r\n        \r\n        switch(true){\r\n        \r\n        case (value <= 35):\r\n           \r\n            return \"fngfear\";\r\n        case (value > 35 && value <= 65):\r\n            \r\n            return \"fngneutral\"\r\n        \r\n        case (value > 65):\r\n            \r\n            return \"fnggreed\";\r\n        default:\r\n            return \"\";\r\n    \r\n        }\r\n    }\r\n    const updateValue = (sec) =>\r\n        {\r\n            let val = parseInt(sec);\r\n            let hours = parseInt(val/ 3600);\r\n            // let mins = parseInt((val/ 60) - hours * 60);\r\n            // let seconds = parseInt(val - hours * 3600 - mins * 60) ;\r\n            return \"\"+hours+\" Hours\"  ;                 \r\n    }\r\n    \r\n    return(\r\n        <div className = \"fng-index\">\r\n            <div className = \"fng-header\">\r\n                <img src = \"../../images/bitcoin_logo.png\"/>\r\n                <div><h4> Fear and Greed Index</h4></div>\r\n                \r\n            </div>\r\n            <div class = \"label\">By alternative.me</div>\r\n            <hr />\r\n            {console.log(fng)}\r\n            {loading &&<div className = \"fng-body\">\r\n                <p>Index: <span className = {String(findColor(fng.data[0].value))}>{fng.data[0].value}<br />\r\n                {fng.data[0].value_classification}</span></p>\r\n            </div>}\r\n            <div className = \"fng-footer\">\r\n            {loading && <p>Time until update  -  {updateValue(fng.data[0].time_until_update)}\r\n                </p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FearAndGreedIndex;","import React, { useEffect, useState } from \"react\";\r\nimport CryptoInfo from \"../mainComps/CryptoInfo\";\r\nimport { TrendUpdate } from \"../../api\";\r\nconst TrendingCoin = () => {\r\n    const [trending,setTrending] = useState([]);\r\n    const[showInfo, setshowInfo] = React.useState(false);\r\n    const[coinId, setcoinId] = React.useState();\r\n    const TrendUpdt = async () =>{\r\n        setTrending(await TrendUpdate());\r\n    }\r\n    useEffect(TrendUpdt,[]);\r\n\r\n    return(\r\n        <div className = \"trending\">\r\n            <h1> Trending </h1>\r\n            <ul>\r\n            {trending.map(trendCoin => (\r\n                <li className = \"trending-item\" onClick = {() => {setcoinId(trendCoin.item.id);setshowInfo(true);}}>\r\n                    <img src = {window.innerWidth > 811 ? trendCoin.item.small: trendCoin.item.thumb} />\r\n                    <div>\r\n                        {trendCoin.item.id}<br />\r\n                        Market Cap Rank: {trendCoin.item.market_cap_rank}\r\n                    </div>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n            {showInfo && <CryptoInfo id={coinId} onShowInfo = {setshowInfo}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrendingCoin;","import React from 'react';\r\nimport cryptoNews from './SideBar/cryptoNews';\r\nimport FearAndGreedIndex from './SideBar/FearAndGreedIndex';\r\nimport TrendingCoin from './SideBar/TrendingCoin';\r\n\r\nconst SideBar = () => {\r\n    return(\r\n       <> \r\n        <FearAndGreedIndex />\r\n        <TrendingCoin />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideBar;","\r\nimport './styles.css';\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport PriceContainer from './Components/mainComps/PriceContainer';\r\nimport CryptoCategories from './Components/mainComps/CryptoCategories';\r\nimport SearchComponent from './Components/SearchComp/SearchComponent';\r\nimport CryptoNews from './Components/SideBar/cryptoNews';\r\nimport SideBar from './Components/SideBar';\r\nimport store from './store';\r\nimport LogoCube from './Components/Cube';\r\n\r\n\r\n\r\nconst App = () => {\r\n  console.log(\"Main app rendered\");\r\n\r\n  return(\r\n    <div className= \"container\">\r\n    <div className = \"option\">\r\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:0})}>1Hr</button>\r\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:1})}>24Hr</button>\r\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:2})}>14D</button>\r\n       <button className = \"btn btn-dark\" onClick = {() => store.dispatch({type:'changeTime',toggleTime:3})}>30D</button>\r\n     </div>\r\n     <Switch>\r\n     <div className = \"main\">\r\n       \r\n      {window.innerWidth > 600 ?<Route path=\"/\" component={() => <PriceContainer />} exact />:\"\"}\r\n      </div>\r\n      </Switch>\r\n      <div className = \"wrapper\">\r\n        <div className = \"sidebar\">\r\n          <SideBar />\r\n          {/* <CryptoNews /> */}\r\n        </div>\r\n        <div className = \"section-search\">\r\n          <SearchComponent />\r\n          <CryptoCategories />\r\n        </div>\r\n          \r\n      </div>\r\n    \r\n    </div>\r\n\r\n    \r\n    \r\n  );\r\n}\r\nexport default App;\r\n","import * as React from 'react';\r\nimport Cube from 'react-3d-cube';\r\n\r\nclass LogoCube extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <center>\r\n            <div>\r\n            <h2>set children</h2>\r\n            <div\r\n            style={{\r\n                width: 300,\r\n                height: 300\r\n            }}\r\n            >\r\n            <Cube size={300} index=\"front\">\r\n            <div >\r\n                        <img style={{width: '280px', height: '300px'}} src=\"https://cdn.sanity.io/images/0vv8moc6/dvm360/0efdfab43ab36c3432ced2ceb2d52daae6a93c96-500x500.jpg\"></img>\r\n                    </div>\r\n                    <div >\r\n                        <img src=\"https://sitterforyourcritter.com/wp-content/uploads/2019/09/female-cat-1.jpg\"></img>\r\n                    </div>\r\n                    <div >\r\n                        <img src=\"https://pawsitivepotential.com/wp-content/uploads/2016/05/Tongue-Kitten-500x500_t.jpg\"></img>\r\n                    </div>\r\n                    <div >\r\n                        <img src=\"https://9ed48207422fa7fc5013-a6297eb5ec0f30e883355c8680f3b2d6.ssl.cf2.rackcdn.com/Hunter_wubba-9294%20(1)-20180803203739-20180803203910-500x500.jpg\"></img>\r\n                    </div>\r\n                    <div >\r\n                        <img src=\"https://www.guildinsurance.com.au/images/librariesprovider3/breed-images/500x500/cat_russian-blue-tica.jpg?sfvrsn=d16600b_2\"></img>\r\n                    </div>\r\n                    <div >\r\n                        <img src=\"https://www.catmospherecafe.com/assets/chiangmai-3ede22d062b60dde4a501695a2e0bfc7451f44d412ed68bd01cb6b44216270e4.jpg\"></img>\r\n                    </div>\r\n            </Cube>\r\n            </div>\r\n            </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LogoCube","import CryptoCategories from \"./mainComps/CryptoCategories\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { useRef, useState } from \"react\";\r\nimport store from '../store';\r\n\r\nconst NavBar = () =>{\r\n    const pagenumArr = ['Top 100', '200-300', '300-400', '400-500', '500-600']\r\n    const CurrencyArr = ['USD', 'AUD','EUR','CAD', 'CNY', 'INR' ]\r\n    const [pageMenuText, setPageMenuText] = useState('Top 100')\r\n    const [curMenuText, setCurMenuText] = useState('usd')\r\n\r\n    const handlePageNum = (index) => {\r\n      store.dispatch({type: 'changeRank', rank: (index+1)});\r\n      setPageMenuText(pagenumArr[index]);\r\n      console.log(pageMenuText);\r\n    }\r\n    const handleCurrencyChange = (index) => {\r\n      store.dispatch({type: 'changeCurrency', currency: CurrencyArr[index].toLowerCase()});\r\n      setCurMenuText(CurrencyArr[index]);\r\n      console.log(CurrencyArr);\r\n    }\r\n\r\n    return(\r\n        <nav>\r\n      <div class=\"logo\">\r\n        <Link to = \"/\">\r\n        <img src=\"../images/logo_1.png\"/>\r\n        <div class=\"header\">\r\n          <h1>CryptoWatch</h1><br/>\r\n        <small>One place for market Insights</small>\r\n        \r\n      </div>\r\n      </Link>\r\n      </div>\r\n      <div class=\"menu\">\r\n        <ul>\r\n          <li class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                {pageMenuText}\r\n              </button>\r\n              <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\r\n                {pagenumArr.map((value,index) => \r\n                (<li onClick = {() => handlePageNum(index)}>\r\n                  <a class=\"dropdown-item\" href=\"#\">{value}</a>\r\n                  </li>)\r\n                  )\r\n                }\r\n              </ul>\r\n          </li>\r\n          <li class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                {curMenuText}\r\n              </button>\r\n              <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\r\n              {CurrencyArr.map((value,index) => \r\n                (<li onClick = {() => handleCurrencyChange(index)}>\r\n                  <a class=\"dropdown-item\" href=\"#\">{value}</a>\r\n                  </li>)\r\n                  )\r\n                }\r\n              </ul>\r\n          </li>\r\n          <li><button className = \"btn\">Donate</button></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n\r\n    return(\r\n        \r\n        <div className = \"footer\">\r\n            <hr />\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6 col-sm-12\">\r\n                    <div class=\"logo\">\r\n                        <Link to = \"/\">\r\n                        <img src=\"../images/logo_1.png\"/>\r\n                            <div class=\"header\">\r\n                                <h1>CryptoWatch</h1><br/>\r\n                                <small>One place for market Insights</small>    \r\n                            </div>\r\n\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n                <div className = \"col-md-6 col-sm-12\">\r\n                    <div className = \"footer-icons\">\r\n                        <a href = \"https://twitter.com/DGazurel\" target = \"_blank\"><i class=\"bi bi-twitter\"></i></a>\r\n                        <a href = \"https://github.com/Dexter009\" target = \"_blank\"><i class=\"bi bi-github\"></i></a>\r\n                        <a href = \"https://www.linkedin.com/in/dhiraz-gazurel/\" target = \"_blank\"><i class=\"bi bi-linkedin\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport App from './App';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport NavBar from './Components/NavBar';\r\nimport Footer from './Components/Footer';\r\nimport store from './store';\r\n\r\nconst rend = () =>{\r\n  ReactDOM.render(\r\n            <React.StrictMode>\r\n              <HashRouter>\r\n                  <NavBar />\r\n                  <App />\r\n                  <Footer />\r\n              </HashRouter>\r\n            </React.StrictMode>,\r\n  document.getElementById('root')\r\n  );\r\n}\r\nrend();\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}